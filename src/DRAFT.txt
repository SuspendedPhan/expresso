My current use case: I'm implementing a autocomplete searchbox (a combobox). I have:
```ts
suggestions: Stream<{label: string, isFocused: Stream<boolean>[]> // Each element is a Suggestion, which is displayed in the dropdown based on the search query
focusedIndex: Stream<number> // The index of the currently focused suggestion (changes with up/down arrow keys)
svelteOutput: Stream<{label: string, isFocused: boolean}[]> // This "unstreamified" array of suggestions gets passed to a svelte component
```

Whenever the query changes or the focused index changes, the output changes and should be emitted. `focusedIndex` is the "inner" stream (well, it gets mapped to isFocused) But the problem is - when focusedIndex changes, the output stream shouldn't emit results for old values of `suggestions`.


