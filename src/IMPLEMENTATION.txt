// IMPLEMENTATION.txt

#######
Domain
#######

ObjectInstance: Represents a specific object on the canvas.
PropertyInstance: Represents a property on an object instance.
CanvasObject: An object on the canvas, provided by the rendering library.
PropertySetter: A function that sets a property on a canvas object.

#######
Process
#######

---
GetRootObjects - Retrieves the root objects from the project.
--->


--->
ExtractPropertyPaths - Extracts property paths from the object hierarchy.
    - Objects
--->
for object in objects:
    for property in object.properties:
        yield PropertyPath(object, property)
    for component in object.components:
        for property in component.properties:
            yield PropertyPath(object, component, property)
        for child in component.children:
            for property in child.properties:
                yield PropertyPath(object, component, child, property)
--->


--->
AnnotateCloneCounts - Annotates property paths with clone counts.
    - CloneCountPropertyPaths
    - NonCloneCountPropertyPaths
--->
CloneCountResults =
    for path in CloneCountPropertyPaths:
        count = EvaluateCloneCount(path)
        yield CloneCountResult(path, count)

yield AnnotatedPropertyPaths =
    for path in NonCloneCountPropertyPaths:
        annotatedSegments =
            for segment in path:
                yield AnnotatedSegment(segment, CloneCountResults)
        yield AnnotatedPropertyPath(annotatedSegments)


--->
ExpandPropertyPaths - Converts PropertyPaths to PropertyInstancePaths by expanding clone counts.
    - AnnotatedPropertyPaths
--->
yield PropertyInstancePaths = for path in AnnotatedPropertyPaths:
    segments = PathSegments(path)
    for instance in ExpandPath(segments):
        yield instance

function ExpandPath(PathSegments):
    FullyExpandedPaths = []
    PartiallyExpandedPaths = []
    while PartiallyExpandedPaths is not empty:
        path = PartiallyExpandedPaths.pop()
        PartiallyExpandedPaths_ = path.ExpandOnce()
        for path_ in PartiallyExpandedPaths_:
            match path_:
                case FullyExpandedPath:
                    FullyExpandedPaths.append(path_)
                case PartiallyExpandedPath:
                    PartiallyExpandedPaths.append(path_)
    return FullyExpandedPaths

function ExpandOnce(path: PartiallyExpandedPath):
    if path.IsFullyExpanded:
        return FullyExpandedPath(path)

    frontSegments, targetSegment, backSegments = path.FirstUnexpandedSegment
    for i in range(targetSegment.CloneCount):
        instanceSegment = InstanceSegment(targetSegment, i)
        path_: PartiallyExpandedPath = Combine(frontSegments, instanceSegment, backSegments)
        yield path_


--->
EvaluatePropertyInstances - Evaluates property instance paths to compute their corresponding values.
    - PropertyInstancePaths
--->
results: Map<PropertyInstancePath, PropertyInstanceResult>

for path in PropertyInstancePaths:
    if path in results:
        continue

    result = EvaluatePropertyInstancePath(path)
    results.append(result)

function EvaluatePropertyInstancePath(PropertyInstancePath):
    if results contains PropertyInstancePath:
        return results[PropertyInstancePath]

    value = PropertyInstance.Evaluate()
    return PropertyInstanceResult(PropertyInstancePath, value)

yield* results

--->
GroupObjectInstances - Nests property results into their object instances.
    - PropertyInstanceResults
--->

ObjectInstanceResult:
    - PropertyInstanceResult:
        - Property, Value

ObjectInstanceResultByPath = []

for result in results:
    parentPath = result.path.ParentPath
    ObjectInstanceResult[parentPath].append(result)

yield* ObjectInstanceResultByPath

--->
AcquireCanvasObjects - Acquires CanvasObjects for each object instance.
    - ObjectInstanceResults
--->

CanvasObjectResult:
    - CanvasObject
    - ObjectInstanceResult:
        - PropertyInstanceResult: Property, Value

for result in ObjectInstanceResults:
    object = AcquireCanvasObject(result.CanvasComponent())
    yield CanvasObjectResult(object, result)

--->
ExtractCanvasProperties - Extracts individual properties from library canvas objects for further processing.
    - CanvasObjectResults
--->

CanvasPropertyResult: (CanvasObject, PropertyInstanceResult)

for result in CanvasObjectResults:
    for propertyResult in result.ObjectInstanceResult.PropertyInstanceResults:
        yield CanvasPropertyResult(result.CanvasObject, propertyResult)

--->
MapPropertySetters - Maps extracted properties to their corresponding setter functions.
    - needs GetPropertySetter(property)
    - CanvasPropertyResults
--->

PropertySetterInstance: (PropertySetter, CanvasObject, Value)

for result in CanvasPropertyResults:
    setter = GetPropertySetter(result.Property)
    yield PropertySetterInstance(setter, result.CanvasObject, result.Value)

--->
ExecutePropertySetters - Applies the setter functions to update the properties on library canvas objects.
---

for setterInstance in PropertySetterInstances:
    setterInstance.Execute()