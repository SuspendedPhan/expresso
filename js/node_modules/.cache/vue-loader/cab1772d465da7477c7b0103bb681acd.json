{"remainingRequest":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/components/StoreGraph.vue?vue&type=script&lang=ts","dependencies":[{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/components/StoreGraph.vue","mtime":1714946187072},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js","mtime":1714947394795},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js","mtime":1714947267504},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/vue-loader/lib/index.js","mtime":1714947393584}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBWdWUgZnJvbSAidnVlIjsKaW1wb3J0IENvbXBvbmVudCBmcm9tICJ2dWUtY2xhc3MtY29tcG9uZW50IjsKaW1wb3J0IHsgUHJvcCwgV2F0Y2ggfSBmcm9tICJ2dWUtcHJvcGVydHktZGVjb3JhdG9yIjsKaW1wb3J0ICogYXMgZDMgZnJvbSAiZDMiOwppbXBvcnQgUm9vdCBmcm9tICIuLi9zdG9yZS9Sb290IjsKaW1wb3J0IEZ1bmN0aW9ucyBmcm9tICJAL2NvZGUvRnVuY3Rpb25zIjsKCkBDb21wb25lbnQoe30pCmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0b3JlR3JhcGggZXh0ZW5kcyBWdWUgewogIGZvcmNlTm9kZXMgPSBbXTsKICBmb3JjZUxpbmtzID0gW107CiAgdmlld0JveCA9ICIwIDAgNTAgNTAiOwogIHNpbXVsYXRpb24gPSBudWxsIGFzIGFueTsKCiAgcHJpdmF0ZSBtb3VudGVkKCkgewogICAgVnVlLm5leHRUaWNrKCgpID0+IHRoaXMuaW5pdCgpKTsKICAgIGNvbnN0IGNvbnRhaW5lciA9IHRoaXMuJHJlZnMuY29udGFpbmVyIGFzIGFueTsKICAgIHRoaXMudmlld0JveCA9IGAwIDAgJHtjb250YWluZXIuY2xpZW50V2lkdGh9ICR7Y29udGFpbmVyLmNsaWVudEhlaWdodH1gOwogIH0KCiAgcHJpdmF0ZSBkZXN0cm95ZWQoKSB7CiAgICB0aGlzLnNpbXVsYXRpb24uc3RvcCgpOwogIH0KCiAgcHJpdmF0ZSBpbml0KCkgewogICAgY29uc3QgY29udGFpbmVyID0gdGhpcy4kcmVmcy5jb250YWluZXIgYXMgYW55OwoKICAgIHRoaXMuYWRkTm9kZXNBbmRMaW5rc0Zvck9yZ2FuaXNtKAogICAgICBSb290Lm9yZ2FuaXNtQ29sbGVjdGlvbi5nZXRSb290KCksCiAgICAgIHRoaXMuZm9yY2VOb2RlcywKICAgICAgdGhpcy5mb3JjZUxpbmtzCiAgICApOwoKICAgIHRoaXMuc2ltdWxhdGlvbiA9IGQzCiAgICAgIC5mb3JjZVNpbXVsYXRpb24odGhpcy5mb3JjZU5vZGVzKQogICAgICAuZm9yY2UoCiAgICAgICAgImxpbmsiLAogICAgICAgIGQzCiAgICAgICAgICAuZm9yY2VMaW5rKHRoaXMuZm9yY2VMaW5rcykKICAgICAgICAgIC5pZCgodCkgPT4gdC5pZCkKICAgICAgICAgIC5kaXN0YW5jZSgxMDApCiAgICAgICkKICAgICAgLmZvcmNlKAogICAgICAgICJjZW50ZXIiLAogICAgICAgIGQzLmZvcmNlQ2VudGVyKGNvbnRhaW5lci5jbGllbnRXaWR0aCAvIDIsIGNvbnRhaW5lci5jbGllbnRIZWlnaHQgLyAyKQogICAgICApCiAgICAgIC5mb3JjZSgiY2hhcmdlIiwgZDMuZm9yY2VNYW55Qm9keSgpLnN0cmVuZ3RoKC0zMDApKQogICAgICAuZm9yY2UoImJvdW5kIiwgdGhpcy5ib3VuZEZvcmNlKTsKCiAgICB0aGlzLnNpbXVsYXRpb24ub24oInRpY2siLCAoKSA9PiB7CiAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7CiAgICB9KTsKICB9CgogIHByaXZhdGUgbGVmdChmb3JjZU5vZGUpIHsKICAgIGNvbnN0IHJlZkFycmF5ID0gdGhpcy4kcmVmc1t0aGlzLnJlZk5hbWVGb3JGb3JjZU5vZGUoZm9yY2VOb2RlKV0gYXMgYW55OwogICAgaWYgKHJlZkFycmF5ID09PSB1bmRlZmluZWQpIHJldHVybiAiMHB4IjsKCiAgICBjb25zdCByZWYgPSByZWZBcnJheVswXTsKICAgIGNvbnN0IHZhbHVlID0gZm9yY2VOb2RlLnggLSByZWYuY2xpZW50V2lkdGggLyAyOwogICAgcmV0dXJuIGAke3ZhbHVlfXB4YDsKICB9CgogIHByaXZhdGUgdG9wKGZvcmNlTm9kZSkgewogICAgY29uc3QgcmVmQXJyYXkgPSB0aGlzLiRyZWZzW3RoaXMucmVmTmFtZUZvckZvcmNlTm9kZShmb3JjZU5vZGUpXSBhcyBhbnk7CiAgICBpZiAocmVmQXJyYXkgPT09IHVuZGVmaW5lZCkgcmV0dXJuICIwcHgiOwoKICAgIGNvbnN0IHJlZiA9IHJlZkFycmF5WzBdOwogICAgY29uc3QgdmFsdWUgPSBmb3JjZU5vZGUueSAtIHJlZi5jbGllbnRIZWlnaHQgLyAyOwogICAgcmV0dXJuIGAke3ZhbHVlfXB4YDsKICB9CgogIHByaXZhdGUgcmVmTmFtZUZvckZvcmNlTm9kZShmb3JjZU5vZGUpIHsKICAgIHJldHVybiBgZm9yY2VOb2RlfCR7Zm9yY2VOb2RlLmlkfWA7CiAgfQoKICBwcml2YXRlIGFkZE5vZGVzQW5kTGlua3NGb3JPcmdhbmlzbShvcmdhbmlzbSwgZm9yY2VOb2RlcywgZm9yY2VMaW5rcykgewogICAgZm9yY2VOb2Rlcy5wdXNoKHsKICAgICAgaWQ6IG9yZ2FuaXNtLmlkLAogICAgICBuYW1lOiBvcmdhbmlzbS5uYW1lLAogICAgICBzdG9yZXR5cGU6IG9yZ2FuaXNtLnN0b3JldHlwZSwKICAgIH0pOwoKICAgIGZvciAoY29uc3QgY2hpbGQgb2YgUm9vdC5vcmdhbmlzbUNvbGxlY3Rpb24uZ2V0Q2hpbGRyZW4ob3JnYW5pc20pKSB7CiAgICAgIGZvcmNlTGlua3MucHVzaCh7IHNvdXJjZTogb3JnYW5pc20uaWQsIHRhcmdldDogY2hpbGQuaWQgfSk7CiAgICAgIHRoaXMuYWRkTm9kZXNBbmRMaW5rc0Zvck9yZ2FuaXNtKGNoaWxkLCBmb3JjZU5vZGVzLCBmb3JjZUxpbmtzKTsKICAgIH0KCiAgICBmb3IgKGNvbnN0IGF0dHJpYnV0ZSBvZiBSb290LmF0dHJpYnV0ZUNvbGxlY3Rpb24uZ2V0QXR0cmlidXRlc0Zvck9yZ2FuaXNtKAogICAgICBvcmdhbmlzbQogICAgKSkgewogICAgICBmb3JjZU5vZGVzLnB1c2goewogICAgICAgIGlkOiBhdHRyaWJ1dGUuaWQsCiAgICAgICAgbmFtZTogYXR0cmlidXRlLm5hbWUsCiAgICAgICAgc3RvcmV0eXBlOiBhdHRyaWJ1dGUuc3RvcmV0eXBlLAogICAgICB9KTsKICAgICAgZm9yY2VMaW5rcy5wdXNoKHsgc291cmNlOiBvcmdhbmlzbS5pZCwgdGFyZ2V0OiBhdHRyaWJ1dGUuaWQgfSk7CgogICAgICBjb25zdCByb290Tm9kZSA9IFJvb3QuYXR0cmlidXRlQ29sbGVjdGlvbi5nZXRSb290Tm9kZShhdHRyaWJ1dGUpOwogICAgICBmb3JjZUxpbmtzLnB1c2goeyBzb3VyY2U6IGF0dHJpYnV0ZS5pZCwgdGFyZ2V0OiByb290Tm9kZS5pZCB9KTsKICAgICAgdGhpcy5hZGROb2Rlc0FuZExpbmtzRm9yTm9kZShyb290Tm9kZSwgZm9yY2VOb2RlcywgZm9yY2VMaW5rcyk7CiAgICB9CiAgfQoKICBwcml2YXRlIGFkZE5vZGVzQW5kTGlua3NGb3JOb2RlKG5vZGUsIGZvcmNlTm9kZXMsIGZvcmNlTGlua3MpIHsKICAgIGZvcmNlTm9kZXMucHVzaCh7CiAgICAgIGlkOiBub2RlLmlkLAogICAgICBuYW1lOiBub2RlLnZhbHVlID8/IG5vZGUubWV0YWZ1bk5hbWUgPz8gbm9kZS5tZXRhbmFtZSwKICAgICAgc3RvcmV0eXBlOiBub2RlLnN0b3JldHlwZSwKICAgICAgbm9kZTogbm9kZQogICAgfSk7CiAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIFJvb3Qubm9kZUNvbGxlY3Rpb24uZ2V0Q2hpbGRyZW4obm9kZSkpIHsKICAgICAgZm9yY2VMaW5rcy5wdXNoKHsgc291cmNlOiBub2RlLmlkLCB0YXJnZXQ6IGNoaWxkLmlkIH0pOwogICAgICB0aGlzLmFkZE5vZGVzQW5kTGlua3NGb3JOb2RlKGNoaWxkLCBmb3JjZU5vZGVzLCBmb3JjZUxpbmtzKTsKICAgIH0KICB9CgogIHByaXZhdGUgYm91bmRGb3JjZShhbHBoYSkgewogICAgY29uc3QgcmVmID0gdGhpcy4kcmVmcy5jb250YWluZXIgYXMgYW55OwogICAgZm9yIChjb25zdCBmb3JjZU5vZGUgb2YgdGhpcy5mb3JjZU5vZGVzIGFzIGFueVtdKSB7CiAgICAgIGZvcmNlTm9kZS54ID0gTWF0aC5tYXgoNSwgZm9yY2VOb2RlLngpOwogICAgICBmb3JjZU5vZGUueCA9IE1hdGgubWluKHJlZi5jbGllbnRXaWR0aCAtIDUsIGZvcmNlTm9kZS54KTsKICAgICAgZm9yY2VOb2RlLnkgPSBNYXRoLm1heCg1LCBmb3JjZU5vZGUueSk7CiAgICAgIGZvcmNlTm9kZS55ID0gTWF0aC5taW4ocmVmLmNsaWVudEhlaWdodCAtIDUsIGZvcmNlTm9kZS55KTsKICAgIH0KICB9CgogIHByaXZhdGUgbm9kZUNsaWNrZWQoZm9yY2VOb2RlKSB7CiAgICBjb25zb2xlLmxvZyhmb3JjZU5vZGUpOwogIH0KfQo="},{"version":3,"sources":["StoreGraph.vue"],"names":[],"mappings":";AAmfile":"StoreGraph.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"StoreGraph\" ref=\"container\">\n    <svg class=\"svg\" ref=\"svg\" :viewBox=\"viewBox\">\n      <g stroke=\"#FFF\" stroke-width=\"1\">\n        <line\n          v-for=\"(forceLink, index) in forceLinks\"\n          :key=\"index\"\n          :x1=\"forceLink.source.x\"\n          :x2=\"forceLink.target.x\"\n          :y1=\"forceLink.source.y\"\n          :y2=\"forceLink.target.y\"\n        ></line>\n      </g>\n    </svg>\n    <div\n      v-for=\"forceNode in forceNodes\"\n      :key=\"`${forceNode.id}|${forceNode.storetype}`\"\n      :class=\"[\n        'forceNode',\n        {\n          attribute: forceNode.storetype === undefined,\n          organism: forceNode.storetype === 'Organism',\n          node: forceNode.storetype === 'node',\n        },\n      ]\"\n      :style=\"{ left: left(forceNode), top: top(forceNode) }\"\n      :ref=\"refNameForForceNode(forceNode)\"\n      @click=\"nodeClicked(forceNode)\"\n    >\n      {{ forceNode.name }}\n    </div>\n  </div>\n</template>\n\n<script lang='ts'>\nimport Vue from \"vue\";\nimport Component from \"vue-class-component\";\nimport { Prop, Watch } from \"vue-property-decorator\";\nimport * as d3 from \"d3\";\nimport Root from \"../store/Root\";\nimport Functions from \"@/code/Functions\";\n\n@Component({})\nexport default class StoreGraph extends Vue {\n  forceNodes = [];\n  forceLinks = [];\n  viewBox = \"0 0 50 50\";\n  simulation = null as any;\n\n  private mounted() {\n    Vue.nextTick(() => this.init());\n    const container = this.$refs.container as any;\n    this.viewBox = `0 0 ${container.clientWidth} ${container.clientHeight}`;\n  }\n\n  private destroyed() {\n    this.simulation.stop();\n  }\n\n  private init() {\n    const container = this.$refs.container as any;\n\n    this.addNodesAndLinksForOrganism(\n      Root.organismCollection.getRoot(),\n      this.forceNodes,\n      this.forceLinks\n    );\n\n    this.simulation = d3\n      .forceSimulation(this.forceNodes)\n      .force(\n        \"link\",\n        d3\n          .forceLink(this.forceLinks)\n          .id((t) => t.id)\n          .distance(100)\n      )\n      .force(\n        \"center\",\n        d3.forceCenter(container.clientWidth / 2, container.clientHeight / 2)\n      )\n      .force(\"charge\", d3.forceManyBody().strength(-300))\n      .force(\"bound\", this.boundForce);\n\n    this.simulation.on(\"tick\", () => {\n      this.$forceUpdate();\n    });\n  }\n\n  private left(forceNode) {\n    const refArray = this.$refs[this.refNameForForceNode(forceNode)] as any;\n    if (refArray === undefined) return \"0px\";\n\n    const ref = refArray[0];\n    const value = forceNode.x - ref.clientWidth / 2;\n    return `${value}px`;\n  }\n\n  private top(forceNode) {\n    const refArray = this.$refs[this.refNameForForceNode(forceNode)] as any;\n    if (refArray === undefined) return \"0px\";\n\n    const ref = refArray[0];\n    const value = forceNode.y - ref.clientHeight / 2;\n    return `${value}px`;\n  }\n\n  private refNameForForceNode(forceNode) {\n    return `forceNode|${forceNode.id}`;\n  }\n\n  private addNodesAndLinksForOrganism(organism, forceNodes, forceLinks) {\n    forceNodes.push({\n      id: organism.id,\n      name: organism.name,\n      storetype: organism.storetype,\n    });\n\n    for (const child of Root.organismCollection.getChildren(organism)) {\n      forceLinks.push({ source: organism.id, target: child.id });\n      this.addNodesAndLinksForOrganism(child, forceNodes, forceLinks);\n    }\n\n    for (const attribute of Root.attributeCollection.getAttributesForOrganism(\n      organism\n    )) {\n      forceNodes.push({\n        id: attribute.id,\n        name: attribute.name,\n        storetype: attribute.storetype,\n      });\n      forceLinks.push({ source: organism.id, target: attribute.id });\n\n      const rootNode = Root.attributeCollection.getRootNode(attribute);\n      forceLinks.push({ source: attribute.id, target: rootNode.id });\n      this.addNodesAndLinksForNode(rootNode, forceNodes, forceLinks);\n    }\n  }\n\n  private addNodesAndLinksForNode(node, forceNodes, forceLinks) {\n    forceNodes.push({\n      id: node.id,\n      name: node.value ?? node.metafunName ?? node.metaname,\n      storetype: node.storetype,\n      node: node\n    });\n    for (const child of Root.nodeCollection.getChildren(node)) {\n      forceLinks.push({ source: node.id, target: child.id });\n      this.addNodesAndLinksForNode(child, forceNodes, forceLinks);\n    }\n  }\n\n  private boundForce(alpha) {\n    const ref = this.$refs.container as any;\n    for (const forceNode of this.forceNodes as any[]) {\n      forceNode.x = Math.max(5, forceNode.x);\n      forceNode.x = Math.min(ref.clientWidth - 5, forceNode.x);\n      forceNode.y = Math.max(5, forceNode.y);\n      forceNode.y = Math.min(ref.clientHeight - 5, forceNode.y);\n    }\n  }\n\n  private nodeClicked(forceNode) {\n    console.log(forceNode);\n  }\n}\n</script>\n\n<style scoped>\n.forceNode {\n  position: absolute;\n  background-color: white;\n}\n.svg {\n  position: absolute;\n}\n.StoreGraph {\n  position: fixed;\n  top: 50px;\n  bottom: 50px;\n  left: 50px;\n  right: 50px;\n  background: rgb(218, 218, 218);\n}\n.organism {\n  background-color: rgb(206, 168, 255);\n}\n.node {\n  background-color: rgb(168, 196, 255);\n}\n.attribute {\n  background-color: rgb(168, 255, 219);\n}\n</style>"]}]}