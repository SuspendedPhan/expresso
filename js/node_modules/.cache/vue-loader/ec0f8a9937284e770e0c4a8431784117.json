{"remainingRequest":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/components/Home.vue?vue&type=style&index=0&id=8dc7cce2&scoped=true&lang=css","dependencies":[{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/components/Home.vue","mtime":1714946187070},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/css-loader/dist/cjs.js","mtime":1714947270570},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1714947393592},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/postcss-loader/src/index.js","mtime":1714947268362},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/vue-loader/lib/index.js","mtime":1714947393584}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5ydW5uZXIgewogIGJvdHRvbTogMHB4OwogIHJpZ2h0OiAwcHg7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHBhZGRpbmc6IDEwcHg7Cn0KLmhvbWUgewogIGRpc3BsYXk6IGdyaWQ7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNTAlIDFmcjsKICBncmlkLXRlbXBsYXRlLXJvd3M6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIHdpZHRoOiAxMDAlOwogIC8qIGhlaWdodDogY2FsYygxMDAlIC0gNDBweCk7CiAgd2lkdGg6IGNhbGMoMTAwJSAtIDQwcHgpOyAqLwogIG92ZXJmbG93OiBoaWRkZW47CiAgLyogZ2FwOiAyMHB4OyAqLwogIC8qIHBhZGRpbmc6IDIwcHg7ICovCn0KLnZpZXdwb3J0IHsKICAvKiBtYXJnaW46IDIwcHg7ICovCiAgLyogYm9yZGVyLWNvbG9yOiBibGFjazsKICBib3JkZXItc3R5bGU6IHNvbGlkOwogIGJvcmRlci13aWR0aDogMXB4OyAqLwogIHotaW5kZXg6IDE7Cn0KLmV4cHJlc3NvciB7CiAgb3ZlcmZsb3cteDogdmlzaWJsZTsKICBvdmVyZmxvdy15OiB2aXNpYmxlOwp9Ci5mbGljayB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJvdHRvbTogMTBweDsKICBsZWZ0OiAxMHB4Owp9Ci5zdG9yZUdyYXBoIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgYm90dG9tOiAxMHB4OwogIGxlZnQ6IDc1cHg7Cn0KLmZ1bGxXaWR0aCB7CiAgZ3JpZC1jb2x1bW46IDEgLyAtMTsKfQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";AAgIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"home\">\n    <template v-if=\"!showStoreGraph\">\n      <template v-if=\"showExpressor\">\n        <Expressor class=\"expressor\" v-if=\"oldExpressor\"/>\n        <WasmExpressor class=\"expressor\" v-else-if=\"tree\" project=\"tree\"/>\n      </template>\n      <Viewport :class=\"['viewport', { fullWidth: !showExpressor }]\" />\n    </template>\n    <StoreGraph v-else></StoreGraph>\n    <TestRunner v-if=\"false\" class=\"runner\" />\n    <button class=\"flick\" @click=\"showExpressor = !showExpressor\">Flick</button>\n    <button class=\"storeGraph\" @click=\"showStoreGraph = !showStoreGraph\">\n      Show Store Graph\n    </button>\n  </div>\n</template>\n\n<script>\nimport Viewport from \"./Viewport\";\nimport Expressor from \"./Expressor\";\nimport StoreGraph from \"./StoreGraph\";\nimport TestRunner from \"./tests/TestRunner.vue\";\nimport Root from \"../store/Root\";\nimport Vue from \"vue\";\nimport WasmExpressor from \"@/components/WasmExpressor\";\nimport WasmModule from \"../../public/WasmModule\";\nimport Wasm from \"../../public/WasmModule.wasm\";\nimport Functions from \"@/code/Functions\";\n\nexport default {\n  name: \"Home\",\n  components: {\n    WasmExpressor,\n    Viewport,\n    Expressor,\n    TestRunner,\n    StoreGraph,\n  },\n  props: {},\n  data: function () {\n    return {\n      showExpressor: true,\n      showStoreGraph: false,\n      oldExpressor: false,\n      tree: null\n    };\n  },\n  async mounted() {\n    Root.load();\n    Root.organismCollection.initRootOrganism();\n    document.addEventListener(\"keydown\", (event) => {\n      return;\n      if (event.key === \"ArrowUp\" && !Root.penStore.getIsQuerying()) {\n        Root.penStore.moveCursorUp();\n        event.preventDefault();\n      } else if (event.key === \"ArrowDown\" && !Root.penStore.getIsQuerying()) {\n        Root.penStore.moveCursorDown();\n        event.preventDefault();\n      }\n\n      if (Root.penStore.getPenPosition().positionType === \"Node\") {\n        if (event.key === \"Enter\") {\n          Root.penStore.setIsQuerying(true);\n        } else if (\n          event.key === \"ArrowLeft\" &&\n          !Root.penStore.getIsQuerying()\n        ) {\n          Root.penStore.moveCursorLeft();\n        } else if (\n          event.key === \"ArrowRight\" &&\n          !Root.penStore.getIsQuerying()\n        ) {\n          Root.penStore.moveCursorRight();\n        } else if (event.key === \"Escape\" && Root.penStore.getIsQuerying()) {\n          Root.penStore.setIsQuerying(false);\n        }\n      }\n    });\n\n    Root.pen.events.on(\"afterPenCommit\", () => {\n      Root.save();\n    });\n\n    Vue.config.errorHandler = (err, vm, info) => {\n      this.consoleError = true;\n      console.error(err);\n      console.error(info);\n    };\n\n    window.addEventListener(\"error\", () => {\n      this.consoleError = true;\n    });\n\n    // --- new stuff ---\n\n    const module = await WasmModule({\n      locateFile: (path) => {\n        if (path.endsWith('.wasm')) {\n          return Wasm;\n        }\n        return path;\n      },\n    });\n\n    const tree = new module.ExpressorTree();\n    module.ExpressorTree.populateTestTree(tree);\n    const attributeVector = tree.getRootOrganism().getAttributes();\n    const attributes = Functions.vectorToArray(attributeVector);\n    const numberNode = module.NumberNode.make(5);\n    console.log(numberNode);\n    window.numberNode = numberNode;\n    // console.log('hi');\n    // for (const attribute of attributes) {\n    //   console.log(attribute.getName());\n    // }\n    attributes[0].getRootNode().replace(numberNode);\n\n    {\n      const attributeVector = tree.getRootOrganism().getAttributes();\n      const attributes = Functions.vectorToArray(attributeVector);\n      console.log(attributes.get(0).getRootNode().getValue());\n    }\n    this.tree = tree;\n  },\n};\n</script>\n<style scoped>\n.runner {\n  bottom: 0px;\n  right: 0px;\n  position: absolute;\n  padding: 10px;\n}\n.home {\n  display: grid;\n  position: absolute;\n  grid-template-columns: 50% 1fr;\n  grid-template-rows: 100%;\n  height: 100%;\n  width: 100%;\n  /* height: calc(100% - 40px);\n  width: calc(100% - 40px); */\n  overflow: hidden;\n  /* gap: 20px; */\n  /* padding: 20px; */\n}\n.viewport {\n  /* margin: 20px; */\n  /* border-color: black;\n  border-style: solid;\n  border-width: 1px; */\n  z-index: 1;\n}\n.expressor {\n  overflow-x: visible;\n  overflow-y: visible;\n}\n.flick {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n}\n.storeGraph {\n  position: absolute;\n  bottom: 10px;\n  left: 75px;\n}\n.fullWidth {\n  grid-column: 1 / -1;\n}\n</style>"]}]}