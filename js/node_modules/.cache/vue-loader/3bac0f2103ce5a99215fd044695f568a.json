{"remainingRequest":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/components/TreeLayout.vue?vue&type=script&lang=ts","dependencies":[{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/components/TreeLayout.vue","mtime":1714946187072},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js","mtime":1714947394795},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js","mtime":1714947267504},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/vue-loader/lib/index.js","mtime":1714947393584}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBSZXNpemVTZW5zb3IgZnJvbSAiY3NzLWVsZW1lbnQtcXVlcmllcy9zcmMvUmVzaXplU2Vuc29yIjsKaW1wb3J0IHtuZXh0VGljaywgb25Nb3VudGVkLCByZWZ9IGZyb20gIkB2dWUvY29tcG9zaXRpb24tYXBpIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVHJlZUxheW91dCcsCiAgcHJvcHM6IHsKICAgIGVsZW1lbnRMYXlvdXQ6IHt9CiAgfSwKICBzZXR1cChwcm9wcykgewogICAgY29uc3QgZWxlbWVudExheW91dCA9IHByb3BzLmVsZW1lbnRMYXlvdXQ7CiAgICBjb25zdCBjYW52YXMgPSByZWY8YW55PihudWxsKTsKCiAgICBsZXQgbGluZXMgPSBbXTsKICAgIGNvbnN0IHRyZWVMYXlvdXRTdHlsZSA9IHJlZigiIik7CiAgICBlbGVtZW50TGF5b3V0Lm9uQ2FsY3VsYXRlZC5zdWJzY3JpYmUob3V0cHV0ID0+IHsKICAgICAgdHJlZUxheW91dFN0eWxlLnZhbHVlID0gYGxlZnQ6IDBweDsgd2lkdGg6ICR7b3V0cHV0LnRvdGFsV2lkdGh9cHg7IGhlaWdodDogJHtvdXRwdXQudG90YWxIZWlnaHR9cHhgOwogICAgICBsaW5lcyA9IG91dHB1dC5saW5lczsKICAgICAgZHJhd0xpbmVzKGNhbnZhcy52YWx1ZSwgb3V0cHV0LmxpbmVzKTsKICAgIH0pOwoKICAgIGNvbnN0IHRyZWVMYXlvdXQgPSByZWY8YW55PihudWxsKTsKICAgIGNvbnN0IGNhbnZhc1dpZHRoID0gcmVmKDApOwogICAgY29uc3QgY2FudmFzSGVpZ2h0ID0gcmVmKDApOwoKICAgIG9uTW91bnRlZCgoKSA9PiB7CiAgICAgIG5leHRUaWNrKCgpID0+IHsKICAgICAgICBlbGVtZW50TGF5b3V0LnJlY2FsY3VsYXRlKCk7CiAgICAgIH0pOwoKICAgICAgbmV3IFJlc2l6ZVNlbnNvcih0cmVlTGF5b3V0LnZhbHVlLCAoKSA9PiB7CiAgICAgICAgY2FudmFzV2lkdGgudmFsdWUgPSB0cmVlTGF5b3V0LnZhbHVlLmNsaWVudFdpZHRoOwogICAgICAgIGNhbnZhc0hlaWdodC52YWx1ZSA9IHRyZWVMYXlvdXQudmFsdWUuY2xpZW50SGVpZ2h0OwogICAgICAgIG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgIGRyYXdMaW5lcyhjYW52YXMudmFsdWUsIGxpbmVzKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9KTsKCiAgICByZXR1cm4gewogICAgICB0cmVlTGF5b3V0LAogICAgICBjYW52YXMsCiAgICAgIGNhbnZhc1dpZHRoLAogICAgICBjYW52YXNIZWlnaHQsCiAgICAgIHRyZWVMYXlvdXRTdHlsZQogICAgfQogIH0KfQoKZnVuY3Rpb24gZHJhd0xpbmVzKGNhbnZhc0VsZW1lbnQsIGxpbmVzKSB7CiAgY29uc3QgY29udGV4dCA9IGNhbnZhc0VsZW1lbnQuZ2V0Q29udGV4dCgiMmQiKTsKICBjb250ZXh0LnN0cm9rZVN0eWxlID0gImdyYXkiOwogIGZvciAoY29uc3QgbGluZSBvZiBsaW5lcykgewogICAgY29udGV4dC5iZWdpblBhdGgoKTsKICAgIGNvbnRleHQubW92ZVRvKGxpbmUuc3RhcnRYLCBsaW5lLnN0YXJ0WSk7CiAgICBjb250ZXh0LmxpbmVUbyhsaW5lLmVuZFgsIGxpbmUuZW5kWSk7CiAgICBjb250ZXh0LnN0cm9rZSgpOwogIH0KfQoK"},{"version":3,"sources":["TreeLayout.vue"],"names":[],"mappings":";AAaA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TreeLayout.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"relative\" ref=\"treeLayout\" :style=\"treeLayoutStyle\">\n    <canvas\n        ref=\"canvas\"\n        type=\"2d\"\n        :width=\"canvasWidth\"\n        :height=\"canvasHeight\"\n        class=\"w-full h-full absolute\"\n    ></canvas>\n    <slot></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport ResizeSensor from \"css-element-queries/src/ResizeSensor\";\nimport {nextTick, onMounted, ref} from \"@vue/composition-api\";\n\nexport default {\n  name: 'TreeLayout',\n  props: {\n    elementLayout: {}\n  },\n  setup(props) {\n    const elementLayout = props.elementLayout;\n    const canvas = ref<any>(null);\n\n    let lines = [];\n    const treeLayoutStyle = ref(\"\");\n    elementLayout.onCalculated.subscribe(output => {\n      treeLayoutStyle.value = `left: 0px; width: ${output.totalWidth}px; height: ${output.totalHeight}px`;\n      lines = output.lines;\n      drawLines(canvas.value, output.lines);\n    });\n\n    const treeLayout = ref<any>(null);\n    const canvasWidth = ref(0);\n    const canvasHeight = ref(0);\n\n    onMounted(() => {\n      nextTick(() => {\n        elementLayout.recalculate();\n      });\n\n      new ResizeSensor(treeLayout.value, () => {\n        canvasWidth.value = treeLayout.value.clientWidth;\n        canvasHeight.value = treeLayout.value.clientHeight;\n        nextTick(() => {\n          drawLines(canvas.value, lines);\n        });\n      });\n    });\n\n    return {\n      treeLayout,\n      canvas,\n      canvasWidth,\n      canvasHeight,\n      treeLayoutStyle\n    }\n  }\n}\n\nfunction drawLines(canvasElement, lines) {\n  const context = canvasElement.getContext(\"2d\");\n  context.strokeStyle = \"gray\";\n  for (const line of lines) {\n    context.beginPath();\n    context.moveTo(line.startX, line.startY);\n    context.lineTo(line.endX, line.endY);\n    context.stroke();\n  }\n}\n\n</script>\n"]}]}