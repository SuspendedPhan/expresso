{"remainingRequest":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/components/WatLine.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/components/WatLine.vue","mtime":1714946187073},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js","mtime":1714947394795},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/vue-loader/lib/index.js","mtime":1714947393584}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBWaWV3cG9ydCBmcm9tICIuL1ZpZXdwb3J0IjsKaW1wb3J0IEV4cHJlc3NvciBmcm9tICIuL0V4cHJlc3NvciI7CmltcG9ydCBUZXN0UnVubmVyIGZyb20gIi4vdGVzdHMvVGVzdFJ1bm5lci52dWUiOwppbXBvcnQgQ29tcG9uZW50IGZyb20gInZ1ZS1jbGFzcy1jb21wb25lbnQiOwppbXBvcnQgeyBQcm9wIH0gZnJvbSAidnVlLXByb3BlcnR5LWRlY29yYXRvciI7CmltcG9ydCBWdWUgZnJvbSAidnVlIjsKCkBDb21wb25lbnQoKQpleHBvcnQgZGVmYXVsdCBjbGFzcyBXYXRMaW5lIGV4dGVuZHMgVnVlIHsKICBAUHJvcCgpIGNhcmRJZDsKICBAUHJvcCgpIG5vZGU7CgogIG1vdW50ZWQoKSB7CiAgICBjb25zdCB0aGF0ID0gdGhpczsKICAgIHNldFRpbWVvdXQoKCkgPT4gdGhhdC51cHBlcigpLCAyMDApOwogIH0KCiAgdXBwZXIoKSB7CiAgICBpZiAodGhpcy5jaGlsZENhcmRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuOwoKICAgIGNvbnN0IGxlZnRSZWN0ID0gdGhpcy5jaGlsZENhcmRzWzBdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOwogICAgY29uc3QgcmlnaHRSZWN0ID0gdGhpcy5jaGlsZENhcmRzWwogICAgICB0aGlzLmNoaWxkQ2FyZHMubGVuZ3RoIC0gMQogICAgXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKCiAgICBjb25zdCBsZWZ0ID0gKGxlZnRSZWN0LmxlZnQgKyBsZWZ0UmVjdC5yaWdodCkgLyAyOwogICAgY29uc3QgcmlnaHQgPSAocmlnaHRSZWN0LmxlZnQgKyByaWdodFJlY3QucmlnaHQpIC8gMjsKICAgIGNvbnN0IGhvcml6b250YWwgPSB0aGlzLiRyZWZzWyJob3Jpem9udGFsIl07CiAgICBob3Jpem9udGFsLnN0eWxlLmxlZnQgPSBsZWZ0ICsgInB4IjsKICAgIGhvcml6b250YWwuc3R5bGUud2lkdGggPSByaWdodCAtIGxlZnQgKyAicHgiOwoKICAgIGNvbnN0IHRvcFJlY3QgPSB0aGlzLmNhcmQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7CiAgICBjb25zdCB0b3BDZW50ZXIgPSAodG9wUmVjdC5sZWZ0ICsgdG9wUmVjdC5yaWdodCkgLyAyOwogICAgY29uc3QgdG9wID0gdG9wUmVjdC5ib3R0b207CiAgICBjb25zdCBoZWlnaHQgPSAobGVmdFJlY3QudG9wIC0gdG9wUmVjdC5ib3R0b20pIC8gMjsKICAgIGNvbnN0IHZlcnRpY2FsID0gdGhpcy4kcmVmc1sidmVydGljYWwiXTsKICAgIHZlcnRpY2FsLnN0eWxlLnRvcCA9IHRvcCArICJweCI7CiAgICB2ZXJ0aWNhbC5zdHlsZS5oZWlnaHQgPSBoZWlnaHQgKyAicHgiOwoKICAgIGZvciAoY29uc3QgY2hpbGRDYXJkIG9mIHRoaXMuY2hpbGRDYXJkcykgewogICAgICBjb25zdCBsaW5lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImxpbmUiICsgY2hpbGRDYXJkLmlkKTsKICAgICAgY29uc3QgY2hpbGRSZWN0ID0gY2hpbGRDYXJkLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOwogICAgICBjb25zdCB4ID0gKGNoaWxkUmVjdC5sZWZ0ICsgY2hpbGRSZWN0LnJpZ2h0KSAvIDI7CiAgICAgIGNvbnN0IHRvcCA9IHRvcFJlY3QuYm90dG9tICsgaGVpZ2h0OwogICAgICBsaW5lLnN0eWxlLmxlZnQgPSB4ICsgInB4IjsKICAgICAgbGluZS5zdHlsZS50b3AgPSB0b3AgKyAicHgiOwogICAgICBsaW5lLnN0eWxlLmhlaWdodCA9IGhlaWdodCArICJweCI7CiAgICB9CiAgfQoKICBnZXQgY2FyZCgpIHsKICAgIHJldHVybiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmNhcmRJZCk7CiAgfQoKICBnZXQgY2hpbGRDYXJkcygpIHsKICAgIGlmICghdGhpcy5ub2RlKSByZXR1cm4gW107CgogICAgY29uc3QgY2FyZElkcyA9IHRoaXMubm9kZS5jYXJkSWRzKCk7CiAgICBjb25zdCByZXQgPSBbXTsKICAgIGZvciAoY29uc3QgY2FyZElkIG9mIGNhcmRJZHMpIHsKICAgICAgcmV0LnB1c2goZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY2FyZElkKSk7CiAgICB9CgogICAgcmV0dXJuIHJldDsKICB9Cn0K"},{"version":3,"sources":["WatLine.vue"],"names":[],"mappings":";AAeA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"WatLine.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"WatLine\" v-if=\"childCards.length > 0\">\n    <div class=\"line\" ref=\"horizontal\" v-show=\"childCards.length > 1\"></div>\n    <div class=\"line\" ref=\"vertical\"></div>\n    <div\n      class=\"line\"\n      ref=\"verticalChild\"\n      v-for=\"child in childCards\"\n      :key=\"child.id\"\n      :id=\"'line' + child.id\"\n    ></div>\n  </div>\n</template>\n\n<script>\nimport Viewport from \"./Viewport\";\nimport Expressor from \"./Expressor\";\nimport TestRunner from \"./tests/TestRunner.vue\";\nimport Component from \"vue-class-component\";\nimport { Prop } from \"vue-property-decorator\";\nimport Vue from \"vue\";\n\n@Component()\nexport default class WatLine extends Vue {\n  @Prop() cardId;\n  @Prop() node;\n\n  mounted() {\n    const that = this;\n    setTimeout(() => that.upper(), 200);\n  }\n\n  upper() {\n    if (this.childCards.length === 0) return;\n\n    const leftRect = this.childCards[0].getBoundingClientRect();\n    const rightRect = this.childCards[\n      this.childCards.length - 1\n    ].getBoundingClientRect();\n\n    const left = (leftRect.left + leftRect.right) / 2;\n    const right = (rightRect.left + rightRect.right) / 2;\n    const horizontal = this.$refs[\"horizontal\"];\n    horizontal.style.left = left + \"px\";\n    horizontal.style.width = right - left + \"px\";\n\n    const topRect = this.card.getBoundingClientRect();\n    const topCenter = (topRect.left + topRect.right) / 2;\n    const top = topRect.bottom;\n    const height = (leftRect.top - topRect.bottom) / 2;\n    const vertical = this.$refs[\"vertical\"];\n    vertical.style.top = top + \"px\";\n    vertical.style.height = height + \"px\";\n\n    for (const childCard of this.childCards) {\n      const line = document.getElementById(\"line\" + childCard.id);\n      const childRect = childCard.getBoundingClientRect();\n      const x = (childRect.left + childRect.right) / 2;\n      const top = topRect.bottom + height;\n      line.style.left = x + \"px\";\n      line.style.top = top + \"px\";\n      line.style.height = height + \"px\";\n    }\n  }\n\n  get card() {\n    return document.getElementById(this.cardId);\n  }\n\n  get childCards() {\n    if (!this.node) return [];\n\n    const cardIds = this.node.cardIds();\n    const ret = [];\n    for (const cardId of cardIds) {\n      ret.push(document.getElementById(cardId));\n    }\n\n    return ret;\n  }\n}\n</script>\n<style scoped>\n.line {\n  border: 1px solid rgba(180, 170, 135, 0.6);\n  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.2);\n  position: absolute;\n}\n</style>"]}]}