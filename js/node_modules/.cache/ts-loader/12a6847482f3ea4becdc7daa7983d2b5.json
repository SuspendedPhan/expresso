{"remainingRequest":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js??ref--14-2!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/code/Collection.ts","dependencies":[{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/code/Collection.ts","mtime":1714946187067},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/babel.config.js","mtime":1714946187052},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js","mtime":1714947394795},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js","mtime":1714947267504},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js","mtime":1714947270651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCB3dSBmcm9tICJ3dSI7CmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbGxlY3Rpb24gewogIGNvbnN0cnVjdG9yKGluZGV4ZWRGaWVsZHMgPSBbXSwgdW5pcXVlbHlJbmRleGVkRmllbGRzID0gW10pIHsKICAgIHRoaXMuaXRlbXMgPSBbXTsKICAgIHRoaXMuaW5kZXhCeUZpZWxkID0gbmV3IE1hcCgpOwogICAgdGhpcy5pdGVyYXRvclZlcnNpb24gPSAwOwogICAgY29uc3Qgc2V0dXAgPSAoZmllbGRzLCB1bmlxdWUpID0+IHsKICAgICAgZm9yIChjb25zdCBmaWVsZCBvZiBmaWVsZHMpIHsKICAgICAgICB0aGlzLmluZGV4QnlGaWVsZC5zZXQoZmllbGQsIHsKICAgICAgICAgIG1hcDogbmV3IE1hcCgpLAogICAgICAgICAgaGFzVW5pcXVlQ29uc3RyYWludDogdW5pcXVlCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH07CiAgICBzZXR1cChpbmRleGVkRmllbGRzLCBmYWxzZSk7CiAgICBzZXR1cCh1bmlxdWVseUluZGV4ZWRGaWVsZHMsIHRydWUpOwogIH0KICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7CiAgICBjb25zdCBpdGVyYXRvclZlcnNpb24gPSB0aGlzLml0ZXJhdG9yVmVyc2lvbjsKICAgIGZvciAoY29uc3QgaXRlbSBvZiB0aGlzLml0ZW1zKSB7CiAgICAgIGNvbnNvbGUuYXNzZXJ0KGl0ZXJhdG9yVmVyc2lvbiA9PT0gdGhpcy5pdGVyYXRvclZlcnNpb24pOwogICAgICB5aWVsZCBpdGVtOwogICAgfQogIH0KICBnZXRNYW55KGluZGV4ZWRGaWVsZCwgaW5kZXhLZXkpIHsKICAgIHZhciBfaW5kZXgkbWFwJGdldDsKICAgIGNvbnN0IGluZGV4ID0gdGhpcy5pbmRleEJ5RmllbGQuZ2V0KGluZGV4ZWRGaWVsZCk7CiAgICBjb25zb2xlLmFzc2VydChpbmRleCAhPT0gdW5kZWZpbmVkKTsKICAgIGNvbnN0IGFuc3dlciA9IChfaW5kZXgkbWFwJGdldCA9IGluZGV4ID09PSBudWxsIHx8IGluZGV4ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbmRleC5tYXAuZ2V0KGluZGV4S2V5KSkgIT09IG51bGwgJiYgX2luZGV4JG1hcCRnZXQgIT09IHZvaWQgMCA/IF9pbmRleCRtYXAkZ2V0IDogW107CiAgICByZXR1cm4gYW5zd2VyOwogIH0KICBnZXRVbmlxdWUoaW5kZXhlZEZpZWxkLCBpbmRleEtleSwgc2hvdWxkQXNzZXJ0ID0gdHJ1ZSkgewogICAgdmFyIF90aGlzJGluZGV4QnlGaWVsZCRnZTsKICAgIGNvbnNvbGUuYXNzZXJ0KChfdGhpcyRpbmRleEJ5RmllbGQkZ2UgPSB0aGlzLmluZGV4QnlGaWVsZC5nZXQoaW5kZXhlZEZpZWxkKSkgPT09IG51bGwgfHwgX3RoaXMkaW5kZXhCeUZpZWxkJGdlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRpbmRleEJ5RmllbGQkZ2UuaGFzVW5pcXVlQ29uc3RyYWludCk7CiAgICBjb25zdCBhbnN3ZXIgPSB0aGlzLmdldE1hbnkoaW5kZXhlZEZpZWxkLCBpbmRleEtleSk7CiAgICBpZiAoc2hvdWxkQXNzZXJ0KSB7CiAgICAgIGNvbnNvbGUuYXNzZXJ0KGFuc3dlci5sZW5ndGggPT09IDEpOwogICAgfQogICAgcmV0dXJuIGFuc3dlciA9PT0gbnVsbCB8fCBhbnN3ZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGFuc3dlclswXTsKICB9CiAgYWRkKGl0ZW0pIHsKICAgIHRoaXMuaXRlcmF0b3JWZXJzaW9uKys7CiAgICB0aGlzLml0ZW1zLnB1c2goaXRlbSk7CiAgICBmb3IgKGNvbnN0IFtmaWVsZCwgaW5kZXhdIG9mIHRoaXMuaW5kZXhCeUZpZWxkLmVudHJpZXMoKSkgewogICAgICBjb25zdCBpbmRleEtleSA9IGl0ZW1bZmllbGRdOwogICAgICBjb25zdCBpdGVtcyA9IGluZGV4Lm1hcC5nZXQoaW5kZXhLZXkpOwogICAgICBpZiAoaXRlbXMgPT09IHVuZGVmaW5lZCkgewogICAgICAgIGluZGV4Lm1hcC5zZXQoaW5kZXhLZXksIFtpdGVtXSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKGluZGV4Lmhhc1VuaXF1ZUNvbnN0cmFpbnQpIGNvbnNvbGUuYXNzZXJ0KGl0ZW1zLmxlbmd0aCA9PT0gMCk7CiAgICAgICAgaXRlbXMucHVzaChpdGVtKTsKICAgICAgfQogICAgfQogICAgcmV0dXJuIGl0ZW07CiAgfQogIGRlbGV0ZShpdGVtKSB7CiAgICBjb25zb2xlLmFzc2VydCh0aGlzLmluZGV4QnlGaWVsZC5zaXplID4gMCk7CiAgICB0aGlzLml0ZXJhdG9yVmVyc2lvbisrOwogICAgY29uc3QgcHJpb3JJdGVtQ291bnQgPSB0aGlzLml0ZW1zLmxlbmd0aDsKICAgIHRoaXMuaXRlbXMgPSB3dSh0aGlzLml0ZW1zKS5yZWplY3QodCA9PiB0ID09PSBpdGVtKS50b0FycmF5KCk7CiAgICBjb25zb2xlLmFzc2VydCh0aGlzLml0ZW1zLmxlbmd0aCA9PT0gcHJpb3JJdGVtQ291bnQgLSAxKTsKICAgIGZvciAoY29uc3QgW2ZpZWxkLCBpbmRleF0gb2YgdGhpcy5pbmRleEJ5RmllbGQpIHsKICAgICAgY29uc3QgaW5kZXhLZXkgPSBpdGVtW2ZpZWxkXTsKICAgICAgY29uc3QgcHJpb3JJdGVtcyA9IGluZGV4Lm1hcC5nZXQoaW5kZXhLZXkpOwogICAgICBjb25zb2xlLmFzc2VydChwcmlvckl0ZW1zICE9PSB1bmRlZmluZWQpOwogICAgICBjb25zb2xlLmFzc2VydChwcmlvckl0ZW1zLmxlbmd0aCA+IDApOwogICAgICBjb25zdCBwb3N0SXRlbXMgPSB3dShwcmlvckl0ZW1zKS5yZWplY3QodCA9PiB0ID09PSBpdGVtKS50b0FycmF5KCk7CiAgICAgIGNvbnNvbGUuYXNzZXJ0KHBvc3RJdGVtcy5sZW5ndGggPT09IHByaW9ySXRlbXMubGVuZ3RoIC0gMSk7CiAgICAgIGlmIChwb3N0SXRlbXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgaW5kZXgubWFwLmRlbGV0ZShpbmRleEtleSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaW5kZXgubWFwLnNldChpbmRleEtleSwgcG9zdEl0ZW1zKTsKICAgICAgfQogICAgfQogIH0KICBzZXJpYWxpemUoKSB7CiAgICByZXR1cm4gewogICAgICBpdGVtczogdGhpcy5pdGVtcwogICAgfTsKICB9CiAgZGVzZXJpYWxpemUoc2VyaWFsaXplZENvbGxlY3Rpb24sIGl0ZW1DbGFzcyA9IHVuZGVmaW5lZCkgewogICAgdGhpcy5pdGVtcyA9IFtdOwogICAgZm9yIChjb25zdCBpbmRleCBvZiB0aGlzLmluZGV4QnlGaWVsZC52YWx1ZXMoKSkgewogICAgICBpbmRleC5tYXAuY2xlYXIoKTsKICAgIH0KICAgIGZvciAoY29uc3QgaXRlbSBvZiBzZXJpYWxpemVkQ29sbGVjdGlvbi5pdGVtcykgewogICAgICBpZiAoaXRlbUNsYXNzICE9PSB1bmRlZmluZWQpIHsKICAgICAgICBjb25zdCBkZXNlcmlhbGl6ZWRJdGVtID0gbmV3IGl0ZW1DbGFzcygpOwogICAgICAgIE9iamVjdC5hc3NpZ24oZGVzZXJpYWxpemVkSXRlbSwgaXRlbSk7CiAgICAgICAgdGhpcy5hZGQoZGVzZXJpYWxpemVkSXRlbSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5hZGQoaXRlbSk7CiAgICAgIH0KICAgIH0KICB9CiAgZ2V0IGxlbmd0aCgpIHsKICAgIHJldHVybiB0aGlzLml0ZW1zLmxlbmd0aDsKICB9Cn0="},{"version":3,"names":["wu","Collection","constructor","indexedFields","uniquelyIndexedFields","items","indexByField","Map","iteratorVersion","setup","fields","unique","field","set","map","hasUniqueConstraint","Symbol","iterator","item","console","assert","getMany","indexedField","indexKey","_index$map$get","index","get","undefined","answer","getUnique","shouldAssert","_this$indexByField$ge","length","add","push","entries","delete","size","priorItemCount","reject","t","toArray","priorItems","postItems","serialize","deserialize","serializedCollection","itemClass","values","clear","deserializedItem","Object","assign"],"sources":["/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/code/Collection.ts"],"sourcesContent":["import wu from \"wu\";\nimport Functions from \"./Functions\";\n\ninterface Index<T> {\n  map: Map<string, T[]>;\n  hasUniqueConstraint: boolean;\n}\n\nexport default class Collection<T> {\n  private items: T[] = [];\n  private indexByField = new Map<string, Index<T>>();\n  private iteratorVersion = 0;\n\n  constructor(\n    indexedFields: string[] = [],\n    uniquelyIndexedFields: string[] = []\n  ) {\n    const setup = (fields, unique) => {\n      for (const field of fields) {\n        this.indexByField.set(field, {\n          map: new Map<string, T[]>(),\n          hasUniqueConstraint: unique,\n        });\n      }\n    };\n\n    setup(indexedFields, false);\n    setup(uniquelyIndexedFields, true);\n  }\n\n  public *[Symbol.iterator]() {\n    const iteratorVersion = this.iteratorVersion;\n\n    for (const item of this.items) {\n      console.assert(iteratorVersion === this.iteratorVersion);\n      yield item;\n    }\n  }\n\n  public getMany(indexedField: string, indexKey: any) {\n    const index = this.indexByField.get(indexedField);\n    console.assert(index !== undefined);\n    const answer = index?.map.get(indexKey) ?? [];\n    return answer;\n  }\n\n  public getUnique(indexedField: string, indexKey: any, shouldAssert = true) {\n    console.assert(this.indexByField.get(indexedField)?.hasUniqueConstraint);\n    const answer = this.getMany(indexedField, indexKey);\n    if (shouldAssert) {\n      console.assert(answer.length === 1);\n    }\n    return answer?.[0];\n  }\n\n  public add(item) {\n    this.iteratorVersion++;\n    this.items.push(item);\n    for (const [field, index] of this.indexByField.entries()) {\n      const indexKey = item[field];\n      const items = index.map.get(indexKey);\n      if (items === undefined) {\n        index.map.set(indexKey, [item]);\n      } else {\n        if (index.hasUniqueConstraint) console.assert(items.length === 0);\n        items.push(item);\n      }\n    }\n\n    return item;\n  }\n\n  public delete(item) {\n    console.assert(this.indexByField.size > 0);\n\n    this.iteratorVersion++;\n    const priorItemCount = this.items.length;\n    this.items = wu(this.items)\n      .reject((t) => t === item)\n      .toArray();\n    console.assert(this.items.length === priorItemCount - 1);\n\n    for (const [field, index] of this.indexByField) {\n      const indexKey = item[field];\n      const priorItems = index.map.get(indexKey);\n      console.assert(priorItems !== undefined);\n      console.assert(priorItems!.length > 0);\n      const postItems = wu(priorItems as T[])\n        .reject((t) => t === item)\n        .toArray();\n      console.assert(postItems.length === priorItems!.length - 1);\n\n      if (postItems.length === 0) {\n        index.map.delete(indexKey);\n      } else {\n        index.map.set(indexKey, postItems);\n      }\n    }\n  }\n\n  public serialize() {\n    return {\n      items: this.items,\n    };\n  }\n\n  public deserialize(serializedCollection, itemClass = undefined as any) {\n    this.items = [];\n    for (const index of this.indexByField.values()) {\n      index.map.clear();\n    }\n    for (const item of serializedCollection.items) {\n      if (itemClass !== undefined) {\n        const deserializedItem = new itemClass();\n        Object.assign(deserializedItem, item);\n        this.add(deserializedItem);\n      } else {\n        this.add(item);\n      }\n    }\n  }\n\n  public get length() {\n    return this.items.length;\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}