{"remainingRequest":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js??ref--14-2!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/code/Evaluator.ts","dependencies":[{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/code/Evaluator.ts","mtime":1714946187067},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/babel.config.js","mtime":1714946187052},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js","mtime":1714947394795},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js","mtime":1714947267504},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js","mtime":1714947270651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Root","RenderShape","DateTime","Attribute","Node","Metastruct","Evaluator","attributeCollection","organismCollection","nodeStore","time","windowSize","metaorganismCollection","computeRenderCommands","organism","getRoot","setFrameTime","utc","universeDurationMillis","getElapsedUniverseTime","as","time01","getUniverseLifespan","timeRoot","getRootNodeFromName","time01Root","windowHeightRoot","windowWidthRoot","windowCenterRoot","windowCenterAttribute","getAttributeFromName","putChild","addNumber","toMillis","height","width","assignVector","computeRenderCommandsForOrganism","clonesRoot","clones","undefined","evalNode","metaorganism","getFromId","metaorganismId","cloneNumber","assignAttribute","renderShape","None","renderCommand","shape","attribute","getEditables","name","value","getRootNode","x","y","organ","getChildren","node","metaname","getChild","targetNodeId","metafun","metafunStore","getFromName","metafunName","children","Array","from","args","map","n","typedArgs","i","length","push","datatype","evalTypedArgs","eval","metastruct","fromId","metastructId","ret","members","member","targetVariableNode","targetVariableNodeId","childNode","memberNode","memberIndex","memberName","console","assert","attributeName","attributeValue","rootNode"],"sources":["/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/code/Evaluator.ts"],"sourcesContent":["import Root, { RenderShape } from \"@/store/Root\";\nimport { DateTime } from \"luxon\";\nimport Attribute from \"@/models/Attribute\";\nimport Node from \"@/models/Node\";\nimport Metastruct from \"@/models/Metastruct\";\n\nexport default class Evaluator {\n  private static get attributeCollection() {\n    return Root.attributeCollection;\n  }\n\n  private static get organismCollection() {\n    return Root.organismCollection;\n  }\n\n  private static get nodeStore() {\n    return Root.nodeStore;\n  }\n\n  private static get time() {\n    return Root.time;\n  }\n\n  private static get windowSize() {\n    return Root.windowSize;\n  }\n\n  private static get metaorganismCollection() {\n    return Root.metaorganismCollection;\n  }\n\n  public static *computeRenderCommands(): Iterable<any> {\n    const organism = this.organismCollection.getRoot();\n    if (organism === null) return;\n\n    this.time.setFrameTime(DateTime.utc());\n    const universeDurationMillis = this.time\n      .getElapsedUniverseTime()\n      .as(\"milliseconds\");\n    const time01 =\n      universeDurationMillis /\n      this.time.getUniverseLifespan().as(\"milliseconds\");\n\n    const timeRoot = this.attributeCollection.getRootNodeFromName(\n      organism,\n      \"time\",\n      false\n    );\n    const time01Root = this.attributeCollection.getRootNodeFromName(\n      organism,\n      \"time01\",\n      false\n    );\n    const windowHeightRoot = this.attributeCollection.getRootNodeFromName(\n      organism,\n      \"window.height\",\n      false\n    );\n    const windowWidthRoot = this.attributeCollection.getRootNodeFromName(\n      organism,\n      \"window.width\",\n      false\n    );\n    const windowCenterRoot = this.attributeCollection.getRootNodeFromName(\n      organism,\n      \"window.center\",\n      false\n    );\n\n    const windowCenterAttribute = Attribute.getAttributeFromName(\n      organism,\n      \"window.center\"\n    );\n\n    if (timeRoot) {\n      this.nodeStore.putChild(\n        timeRoot,\n        0,\n        this.nodeStore.addNumber(DateTime.utc().toMillis() / 1000)\n      );\n      // this.nodeStore.putChild(timeRoot, 0, this.nodeStore.addNumber(universeDurationMillis));\n    }\n    if (windowHeightRoot) {\n      this.nodeStore.putChild(\n        windowHeightRoot,\n        0,\n        this.nodeStore.addNumber(this.windowSize.height)\n      );\n    }\n    if (windowWidthRoot) {\n      this.nodeStore.putChild(\n        windowWidthRoot,\n        0,\n        this.nodeStore.addNumber(this.windowSize.width)\n      );\n    }\n    if (windowCenterAttribute) {\n      windowCenterAttribute.assignVector(\n        this.windowSize.width / 2,\n        this.windowSize.height / 2\n      );\n    }\n    if (time01Root) {\n      this.nodeStore.putChild(time01Root, 0, this.nodeStore.addNumber(time01));\n    }\n    yield* this.computeRenderCommandsForOrganism(organism);\n  }\n\n  private static *computeRenderCommandsForOrganism(organism): Iterable<any> {\n    const clonesRoot = this.attributeCollection.getRootNodeFromName(\n      organism,\n      \"clones\",\n      false\n    );\n    const clones = clonesRoot === undefined ? 1 : this.evalNode(clonesRoot);\n\n    const metaorganism = this.metaorganismCollection.getFromId(\n      organism.metaorganismId\n    ) as any;\n\n    for (let cloneNumber = 0; cloneNumber < clones; cloneNumber++) {\n      if (clonesRoot) {\n        Evaluator.assignAttribute(organism, \"cloneNumber\", cloneNumber);\n        Evaluator.assignAttribute(\n          organism,\n          \"cloneNumber01\",\n          cloneNumber / (clones - 1)\n        );\n        Evaluator.assignAttribute(\n          organism,\n          \"radialCloneNumber01\",\n          cloneNumber / clones\n        );\n      }\n\n      if (metaorganism.renderShape !== RenderShape.None) {\n        const renderCommand = {} as any;\n        renderCommand.shape = metaorganism.renderShape;\n        for (const attribute of this.attributeCollection.getEditables(\n          organism\n        )) {\n          if (attribute.name === \"clones\") continue;\n\n          const value = this.evalNode(\n            this.attributeCollection.getRootNode(attribute)\n          );\n          // const value = this.attributeCollection.getRootNode(attribute).eval();\n          if (attribute.name === \"xy\") {\n            renderCommand.x = value.x;\n            renderCommand.y = value.y;\n          } else {\n            renderCommand[attribute.name] = value;\n          }\n        }\n        yield renderCommand;\n      }\n\n      for (const organ of this.organismCollection.getChildren(organism)) {\n        yield* this.computeRenderCommandsForOrganism(organ);\n      }\n    }\n  }\n\n  private static evalNode(node) {\n    if (node.metaname === \"Number\") {\n      return node.value;\n    } else if (node.metaname === \"Variable\") {\n      return this.evalNode(Node.getChild(node, 0));\n    } else if (node.metaname === \"Reference\") {\n      return this.evalNode(Node.getFromId(node.targetNodeId));\n    } else if (node.metaname === \"Function\") {\n      const metafun = Root.metafunStore.getFromName(node.metafunName) as any;\n      const children = Array.from(Node.getChildren(node));\n      const args = children.map(n => this.evalNode(n));\n      if (\"evalTypedArgs\" in metafun) {\n        const typedArgs = [] as any;\n        for (let i = 0; i < children.length; i++) {\n          typedArgs.push({ datatype: children[i].datatype, value: args[i] });\n        }\n        return metafun.evalTypedArgs(...typedArgs);\n      } else {\n        return metafun.eval(...args);\n      }\n    } else if (node.metaname === \"Struct\") {\n      const metastruct = Metastruct.fromId(node.metastructId);\n      const ret = {};\n      for (let i = 0; i < metastruct.members.length; i++) {\n        const member = metastruct.members[i];\n        ret[member.name] = this.evalNode(Node.getChild(node, i));\n      }\n      return ret;\n    } else if (node.metaname === \"Void\") {\n      return undefined;\n    } else if (node.metaname === \"StructMemberReference\") {\n      const targetVariableNode = Node.getFromId(node.targetVariableNodeId);\n      const childNode = Node.getChild(targetVariableNode, 0);\n      if (childNode.metaname === \"Struct\") {\n        const memberNode = Node.getChild(childNode, node.memberIndex);\n        return this.evalNode(memberNode);\n      } else if (childNode.metaname === \"Function\") {\n        const datatype = targetVariableNode.datatype;\n        const memberName = datatype.members[node.memberIndex].name;\n        return this.evalNode(childNode)[memberName];\n      } else {\n        console.assert(false, childNode);\n        return undefined;\n      }\n    } else {\n      console.assert(false);\n    }\n  }\n\n  private static assignAttribute(\n    organism,\n    attributeName: string,\n    attributeValue: number\n  ) {\n    const rootNode = this.attributeCollection.getRootNodeFromName(\n      organism,\n      attributeName\n    );\n    this.nodeStore.getChild(rootNode, 0).value = attributeValue;\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}