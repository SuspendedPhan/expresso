{"remainingRequest":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js??ref--14-2!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/store/OrganismCollection.ts","dependencies":[{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/store/OrganismCollection.ts","mtime":1714946187077},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/babel.config.js","mtime":1714946187052},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js","mtime":1714947394795},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js","mtime":1714947267504},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js","mtime":1714947270651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCB7IHY0IGFzIHV1aWR2NCB9IGZyb20gInV1aWQiOwppbXBvcnQgd3UgZnJvbSAid3UiOwppbXBvcnQgTWV0YXN0cnVjdCBmcm9tICJAL21vZGVscy9NZXRhc3RydWN0IjsKaW1wb3J0IHsgUHJpbWl0aXZlIH0gZnJvbSAiQC9tb2RlbHMvVHlwZSI7CmZ1bmN0aW9uIG1ha2VPcmdhbmlzbSh7CiAgbmFtZQp9KSB7CiAgcmV0dXJuIHsKICAgIHN0b3JldHlwZTogIk9yZ2FuaXNtIiwKICAgIGlkOiB1dWlkdjQoKSwKICAgIG5hbWUsCiAgICBtZXRhb3JnYW5pc21JZDogbnVsbAogIH07Cn0KZXhwb3J0IGRlZmF1bHQgY2xhc3MgT3JnYW5pc21Db2xsZWN0aW9uIHsKICBjb25zdHJ1Y3Rvcihyb290KSB7CiAgICB0aGlzLnJvb3QgPSByb290OwogICAgdGhpcy5vcmdhbmlzbXMgPSBbXTsKICAgIHRoaXMub3JnYW5zID0gW107CiAgICB0aGlzLnJvb3RPcmdhbmlzbSA9IG51bGw7CiAgfQogIC8vIC0tLSBHRVRTIC0tLQogIGdldEZyb21OYW1lKG5hbWUpIHsKICAgIHJldHVybiB3dSh0aGlzLm9yZ2FuaXNtcykuZmluZChvcmdhbmlzbSA9PiBvcmdhbmlzbS5uYW1lID09PSBuYW1lKTsKICB9CiAgZ2V0T3JnYW5pc21zKCkgewogICAgcmV0dXJuIHRoaXMub3JnYW5pc21zOwogIH0KICBnZXRPcmdhbmlzbUZyb21JZChvcmdhbmlzbUlkKSB7CiAgICBjb25zdCBvcmdhbmlzbSA9IHd1KHRoaXMub3JnYW5pc21zKS5maW5kKHJvdyA9PiByb3cuaWQgPT09IG9yZ2FuaXNtSWQpOwogICAgY29uc29sZS5hc3NlcnQob3JnYW5pc20pOwogICAgcmV0dXJuIG9yZ2FuaXNtOwogIH0KICBnZXRTZXJpYWxpemVkKCkgewogICAgcmV0dXJuIHsKICAgICAgb3JnYW5pc21zOiB0aGlzLm9yZ2FuaXNtcywKICAgICAgb3JnYW5zOiB0aGlzLm9yZ2FucywKICAgICAgcm9vdE9yZ2FuaXNtOiB0aGlzLnJvb3RPcmdhbmlzbQogICAgfTsKICB9CiAgZ2V0T3JnYW5pc21Gcm9tUGF0aCguLi5wYXRoKSB7CiAgICBsZXQgb3JnYW5pc20gPSB0aGlzLnJvb3RPcmdhbmlzbTsKICAgIGZvciAoY29uc3Qgb3JnYW5pc21OYW1lIG9mIHBhdGgpIHsKICAgICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLmdldENoaWxkcmVuKG9yZ2FuaXNtKTsKICAgICAgb3JnYW5pc20gPSBjaGlsZHJlbi5maW5kKHQgPT4gKHQgPT09IG51bGwgfHwgdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogdC5uYW1lKSA9PT0gb3JnYW5pc21OYW1lKTsKICAgICAgY29uc29sZS5hc3NlcnQob3JnYW5pc20pOwogICAgfQogICAgcmV0dXJuIG9yZ2FuaXNtOwogIH0KICAqZ2V0QW5jZXN0b3JzKG9yZ2FuaXNtKSB7CiAgICBjb25zb2xlLmFzc2VydChvcmdhbmlzbSk7CiAgICB3aGlsZSAodHJ1ZSkgewogICAgICBvcmdhbmlzbSA9IHRoaXMuZ2V0U3VwZXIob3JnYW5pc20pOwogICAgICBpZiAob3JnYW5pc20gPT09IHVuZGVmaW5lZCkgcmV0dXJuOwogICAgICB5aWVsZCBvcmdhbmlzbTsKICAgIH0KICB9CiAgZ2V0U3VwZXIob3JnYW5pc20pIHsKICAgIHZhciBfdGhpcyRvcmdhbnMkZmluZDsKICAgIGNvbnN0IHN1cGVyb3JnYW5pc21JZCA9IChfdGhpcyRvcmdhbnMkZmluZCA9IHRoaXMub3JnYW5zLmZpbmQodCA9PiB0Lm9yZ2FuSWQgPT09IG9yZ2FuaXNtLmlkKSkgPT09IG51bGwgfHwgX3RoaXMkb3JnYW5zJGZpbmQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJG9yZ2FucyRmaW5kLnN1cGVyb3JnYW5pc21JZDsKICAgIGlmICghc3VwZXJvcmdhbmlzbUlkKSB7CiAgICAgIGNvbnNvbGUuYXNzZXJ0KG9yZ2FuaXNtLmlkID09PSB0aGlzLnJvb3RPcmdhbmlzbS5pZCk7CiAgICAgIHJldHVybiB1bmRlZmluZWQ7CiAgICB9CiAgICByZXR1cm4gdGhpcy5nZXRPcmdhbmlzbUZyb21JZChzdXBlcm9yZ2FuaXNtSWQpOwogIH0KICBnZXRSb290KCkgewogICAgcmV0dXJuIHRoaXMucm9vdE9yZ2FuaXNtOwogIH0KICAvLyAtLS0gQUNUSU9OUyAtLS0KICBkZXNlcmlhbGl6ZShzdG9yZSkgewogICAgT2JqZWN0LmFzc2lnbih0aGlzLCBzdG9yZSk7CiAgfQogIC8qKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgcHV0KG5hbWUpIHsKICAgIGNvbnN0IG9yZ2FuaXNtID0gbWFrZU9yZ2FuaXNtKHsKICAgICAgbmFtZQogICAgfSk7CiAgICB0aGlzLm9yZ2FuaXNtcy5wdXNoKG9yZ2FuaXNtKTsKICAgIHJldHVybiBvcmdhbmlzbTsKICB9CiAgcHV0RnJvbU1ldGEobmFtZSwgbWV0YW9yZ2FuaXNtKSB7CiAgICBjb25zdCBvcmdhbmlzbSA9IHRoaXMucHV0RnJvbU1ldGFXaXRob3V0QXR0cmlidXRlcyhuYW1lLCBtZXRhb3JnYW5pc20pOwogICAgZm9yIChjb25zdCBtZXRhYXR0cmlidXRlIG9mIG1ldGFvcmdhbmlzbS5hdHRyaWJ1dGVzKSB7CiAgICAgIHZhciBfbWV0YWF0dHJpYnV0ZSR0eXBlOwogICAgICBjb25zdCBkYXRhdHlwZSA9IChfbWV0YWF0dHJpYnV0ZSR0eXBlID0gbWV0YWF0dHJpYnV0ZS50eXBlKSAhPT0gbnVsbCAmJiBfbWV0YWF0dHJpYnV0ZSR0eXBlICE9PSB2b2lkIDAgPyBfbWV0YWF0dHJpYnV0ZSR0eXBlIDogUHJpbWl0aXZlLk51bWJlcjsKICAgICAgY29uc3QgYXR0cmlidXRlID0gdGhpcy5yb290LmF0dHJpYnV0ZUNvbGxlY3Rpb24ucHV0RWRpdGFibGUob3JnYW5pc20sIG1ldGFhdHRyaWJ1dGUubmFtZSwgZGF0YXR5cGUsIHRydWUpOwogICAgICBpZiAobWV0YWF0dHJpYnV0ZS5kZWZhdWx0ICE9PSB1bmRlZmluZWQpIHsKICAgICAgICBjb25zb2xlLmFzc2VydChkYXRhdHlwZSA9PT0gUHJpbWl0aXZlLk51bWJlcik7CiAgICAgICAgdGhpcy5yb290LmF0dHJpYnV0ZUNvbGxlY3Rpb24uYXNzaWduTnVtYmVyKGF0dHJpYnV0ZSwgbWV0YWF0dHJpYnV0ZS5kZWZhdWx0KTsKICAgICAgfQogICAgfQogICAgaWYgKG1ldGFvcmdhbmlzbS5uYW1lICE9PSAiVGhlVm9pZCIpIHsKICAgICAgY29uc3QgY2xvbmVzID0gdGhpcy5yb290LmF0dHJpYnV0ZUNvbGxlY3Rpb24ucHV0RWRpdGFibGUob3JnYW5pc20sICJjbG9uZXMiLCBQcmltaXRpdmUuTnVtYmVyLCB0cnVlKTsKICAgICAgdGhpcy5yb290LmF0dHJpYnV0ZUNvbGxlY3Rpb24ucHV0RW1lcmdlbnQob3JnYW5pc20sICJjbG9uZU51bWJlciIsIFByaW1pdGl2ZS5OdW1iZXIpOwogICAgICB0aGlzLnJvb3QuYXR0cmlidXRlQ29sbGVjdGlvbi5wdXRFbWVyZ2VudChvcmdhbmlzbSwgImNsb25lTnVtYmVyMDEiLCBQcmltaXRpdmUuTnVtYmVyKTsKICAgICAgdGhpcy5yb290LmF0dHJpYnV0ZUNvbGxlY3Rpb24ucHV0RW1lcmdlbnQob3JnYW5pc20sICJyYWRpYWxDbG9uZU51bWJlcjAxIiwgUHJpbWl0aXZlLk51bWJlcik7CiAgICAgIHRoaXMucm9vdC5hdHRyaWJ1dGVDb2xsZWN0aW9uLmFzc2lnbk51bWJlcihjbG9uZXMsIDEpOwogICAgfQogICAgcmV0dXJuIG9yZ2FuaXNtOwogIH0KICByZW1vdmUob3JnYW5pc20pIHsKICAgIGNvbnNvbGUuYXNzZXJ0KG9yZ2FuaXNtICE9PSB0aGlzLnJvb3RPcmdhbmlzbSk7CiAgICBmb3IgKGNvbnN0IGF0dHJpYnV0ZSBvZiB0aGlzLnJvb3QuYXR0cmlidXRlQ29sbGVjdGlvbi5nZXRBdHRyaWJ1dGVzRm9yT3JnYW5pc20ob3JnYW5pc20pKSB7CiAgICAgIHRoaXMucm9vdC5hdHRyaWJ1dGVDb2xsZWN0aW9uLnJlbW92ZShhdHRyaWJ1dGUpOwogICAgfQogICAgZm9yIChjb25zdCBvcmdhbiBvZiB0aGlzLmdldENoaWxkcmVuKG9yZ2FuaXNtKSkgewogICAgICB0aGlzLnJlbW92ZShvcmdhbik7CiAgICB9CiAgICB0aGlzLm9yZ2FucyA9IHd1KHRoaXMub3JnYW5zKS5yZWplY3QodCA9PiB0Lm9yZ2FuSWQgPT09IG9yZ2FuaXNtLmlkIHx8IHQuc3VwZXJvcmdhbmlzbUlkID09PSBvcmdhbmlzbS5pZCkudG9BcnJheSgpOwogICAgdGhpcy5vcmdhbmlzbXMgPSB3dSh0aGlzLm9yZ2FuaXNtcykucmVqZWN0KHQgPT4gdC5pZCA9PT0gb3JnYW5pc20uaWQpLnRvQXJyYXkoKTsKICB9CiAgc3Bhd24oKSB7CiAgICBjb25zdCBtZXRhY2lyY2xlID0gdGhpcy5yb290Lm1ldGFvcmdhbmlzbUNvbGxlY3Rpb24uZ2V0RnJvbU5hbWUoIkNpcmNsZSIpOwogICAgY29uc3Qgb3JnYW5pc20gPSB0aGlzLnB1dEZyb21NZXRhKG51bGwsIG1ldGFjaXJjbGUpOwogICAgb3JnYW5pc20ubmFtZSA9IG9yZ2FuaXNtLmlkOwogICAgcmV0dXJuIG9yZ2FuaXNtOwogIH0KICBwdXRGcm9tTWV0YW5hbWUobmFtZSwgbWV0YW5hbWUpIHsKICAgIGNvbnN0IG1ldGFvcmdhbmlzbSA9IHRoaXMucm9vdC5tZXRhb3JnYW5pc21Db2xsZWN0aW9uLmdldEZyb21OYW1lKG1ldGFuYW1lKTsKICAgIHJldHVybiB0aGlzLnB1dEZyb21NZXRhKG5hbWUsIG1ldGFvcmdhbmlzbSk7CiAgfQogIGFkZENoaWxkKHN1cGVyb3JnYW5pc20sIG9yZ2FuKSB7CiAgICBjb25zb2xlLmFzc2VydChvcmdhbik7CiAgICBjb25zb2xlLmFzc2VydChzdXBlcm9yZ2FuaXNtKTsKICAgIHRoaXMub3JnYW5zID0gd3UodGhpcy5vcmdhbnMpLnJlamVjdCh0ID0+IHQub3JnYW5JZCA9PT0gb3JnYW4uaWQpLnRvQXJyYXkoKTsKICAgIHRoaXMub3JnYW5zLnB1c2goewogICAgICBzdXBlcm9yZ2FuaXNtSWQ6IHN1cGVyb3JnYW5pc20uaWQsCiAgICAgIG9yZ2FuSWQ6IG9yZ2FuLmlkCiAgICB9KTsKICAgIHJldHVybiBvcmdhbjsKICB9CiAgZ2V0Q2hpbGRyZW4oc3VwZXJvcmdhbmlzbSkgewogICAgY29uc3Qgb3JnYW5FbnRyaWVzID0gd3UodGhpcy5vcmdhbnMpLmZpbHRlcih0ID0+IHQuc3VwZXJvcmdhbmlzbUlkID09PSBzdXBlcm9yZ2FuaXNtLmlkKTsKICAgIHJldHVybiBvcmdhbkVudHJpZXMubWFwKHQgPT4gdGhpcy5nZXRPcmdhbmlzbUZyb21JZCh0Lm9yZ2FuSWQpKTsKICB9CiAgcHV0RnJvbU1ldGFXaXRob3V0QXR0cmlidXRlcyhuYW1lLCBtZXRhb3JnYW5pc20pIHsKICAgIGNvbnN0IG9yZ2FuaXNtID0gbWFrZU9yZ2FuaXNtKHsKICAgICAgbmFtZQogICAgfSk7CiAgICBpZiAob3JnYW5pc20ubmFtZSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIG9yZ2FuaXNtLm5hbWUgPSBvcmdhbmlzbS5pZDsKICAgIH0KICAgIG9yZ2FuaXNtLm1ldGFvcmdhbmlzbUlkID0gbWV0YW9yZ2FuaXNtLmlkOwogICAgdGhpcy5vcmdhbmlzbXMucHVzaChvcmdhbmlzbSk7CiAgICBjb25zb2xlLmFzc2VydChvcmdhbmlzbSAhPT0gdW5kZWZpbmVkKTsKICAgIHJldHVybiBvcmdhbmlzbTsKICB9CiAgcHV0U3VwZXJPcmdhbmlzbVdpdGhvdXRBdHRyaWJ1dGVzKG5hbWUpIHsKICAgIGNvbnN0IGFuc3dlciA9IHRoaXMucHV0RnJvbU1ldGFXaXRob3V0QXR0cmlidXRlcyhuYW1lLCB0aGlzLnJvb3QubWV0YW9yZ2FuaXNtQ29sbGVjdGlvbi5nZXRGcm9tTmFtZSgiU3VwZXJPcmdhbmlzbSIpKTsKICAgIGNvbnNvbGUuYXNzZXJ0KGFuc3dlcik7CiAgICByZXR1cm4gYW5zd2VyOwogIH0KICBpbml0Um9vdE9yZ2FuaXNtKCkgewogICAgaWYgKHRoaXMucm9vdE9yZ2FuaXNtKSByZXR1cm47CiAgICB0aGlzLnJvb3RPcmdhbmlzbSA9IHRoaXMucHV0RnJvbU1ldGFuYW1lKCJUaGUgVm9pZCIsICJUaGVWb2lkIik7CiAgICB0aGlzLnJvb3QuYXR0cmlidXRlQ29sbGVjdGlvbi5wdXRFbWVyZ2VudCh0aGlzLnJvb3RPcmdhbmlzbSwgInRpbWUiKTsKICAgIHRoaXMucm9vdC5hdHRyaWJ1dGVDb2xsZWN0aW9uLnB1dEVtZXJnZW50KHRoaXMucm9vdE9yZ2FuaXNtLCAidGltZTAxIik7CiAgICB0aGlzLnJvb3QuYXR0cmlidXRlQ29sbGVjdGlvbi5wdXRFbWVyZ2VudCh0aGlzLnJvb3RPcmdhbmlzbSwgIndpbmRvdy5oZWlnaHQiKTsKICAgIHRoaXMucm9vdC5hdHRyaWJ1dGVDb2xsZWN0aW9uLnB1dEVtZXJnZW50KHRoaXMucm9vdE9yZ2FuaXNtLCAid2luZG93LndpZHRoIik7CiAgICB0aGlzLnJvb3QuYXR0cmlidXRlQ29sbGVjdGlvbi5wdXRFbWVyZ2VudCh0aGlzLnJvb3RPcmdhbmlzbSwgIndpbmRvdy5jZW50ZXIiLCBNZXRhc3RydWN0LmJ1aWx0aW5NZXRhc3RydWN0cy5WZWN0b3IpOwogICAgcmV0dXJuIHRoaXMucm9vdE9yZ2FuaXNtOwogIH0KfQ=="},{"version":3,"names":["v4","uuidv4","wu","Metastruct","Primitive","makeOrganism","name","storetype","id","metaorganismId","OrganismCollection","constructor","root","organisms","organs","rootOrganism","getFromName","find","organism","getOrganisms","getOrganismFromId","organismId","row","console","assert","getSerialized","getOrganismFromPath","path","organismName","children","getChildren","t","getAncestors","getSuper","undefined","_this$organs$find","superorganismId","organId","getRoot","deserialize","store","Object","assign","put","push","putFromMeta","metaorganism","putFromMetaWithoutAttributes","metaattribute","attributes","_metaattribute$type","datatype","type","Number","attribute","attributeCollection","putEditable","default","assignNumber","clones","putEmergent","remove","getAttributesForOrganism","organ","reject","toArray","spawn","metacircle","metaorganismCollection","putFromMetaname","metaname","addChild","superorganism","organEntries","filter","map","putSuperOrganismWithoutAttributes","answer","initRootOrganism","builtinMetastructs","Vector"],"sources":["/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/store/OrganismCollection.ts"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport wu from \"wu\";\nimport { MetaOrganism } from \"./MetaorganismCollection\";\nimport { Root } from \"./Root\";\nimport Types from \"./Types\";\nimport Metastruct from \"@/models/Metastruct\";\nimport {Primitive} from \"@/models/Type\";\n\nfunction makeOrganism({ name }) {\n  return {\n    storetype: \"Organism\",\n    id: uuidv4(),\n    name,\n    metaorganismId: null,\n  };\n}\n\ninterface OrganEntry {\n  organId: string;\n  superorganismId: string;\n}\n\nexport interface Organism {\n  id: string;\n  name: string;\n  storetype: \"Organism\";\n  metaorganismId: string;\n}\n\nexport default class OrganismCollection {\n  organisms = [] as Organism[];\n  organs = [] as OrganEntry[];\n  rootOrganism = null as any;\n\n  constructor(private root: Root) {}\n\n  // --- GETS ---\n\n  getFromName(name) {\n    return wu(this.organisms).find((organism) => organism.name === name);\n  }\n\n  getOrganisms() {\n    return this.organisms;\n  }\n\n  getOrganismFromId(organismId): Organism {\n    const organism = wu(this.organisms).find((row) => row.id === organismId);\n    console.assert(organism as any);\n    return organism as any;\n  }\n\n  getSerialized() {\n    return {\n      organisms: this.organisms,\n      organs: this.organs,\n      rootOrganism: this.rootOrganism,\n    };\n  }\n\n  getOrganismFromPath(...path: string[]) {\n    let organism = this.rootOrganism;\n    for (const organismName of path) {\n      const children = this.getChildren(organism);\n      organism = children.find((t) => t?.name === organismName);\n      console.assert(organism);\n    }\n    return organism;\n  }\n\n  *getAncestors(organism) {\n    console.assert(organism);\n    while (true) {\n      organism = this.getSuper(organism);\n      if (organism === undefined) return;\n      yield organism;\n    }\n  }\n\n  getSuper(organism: Organism): Organism | undefined {\n    const superorganismId = this.organs.find((t) => t.organId === organism.id)\n      ?.superorganismId;\n    if (!superorganismId) {\n      console.assert(organism.id === this.rootOrganism.id);\n      return undefined;\n    }\n    return this.getOrganismFromId(superorganismId);\n  }\n\n  getRoot(): Organism {\n    return this.rootOrganism;\n  }\n\n  // --- ACTIONS ---\n\n  deserialize(store) {\n    Object.assign(this, store);\n  }\n\n  /**\n   * @deprecated\n   */\n  put(name): Organism {\n    const organism = makeOrganism({ name }) as any;\n    this.organisms.push(organism);\n    return organism;\n  }\n\n  putFromMeta(name, metaorganism: MetaOrganism) {\n    const organism = this.putFromMetaWithoutAttributes(name, metaorganism);\n    for (const metaattribute of metaorganism.attributes) {\n      const datatype = metaattribute.type ?? Primitive.Number;\n      const attribute = this.root.attributeCollection.putEditable(\n        organism,\n        metaattribute.name,\n        datatype,\n        true\n      );\n      if (metaattribute.default !== undefined) {\n        console.assert(datatype === Primitive.Number);\n        this.root.attributeCollection.assignNumber(attribute, metaattribute.default);\n      }\n    }\n\n    if (metaorganism.name !== \"TheVoid\") {\n      const clones = this.root.attributeCollection.putEditable(organism, \"clones\", Primitive.Number, true);\n      this.root.attributeCollection.putEmergent(organism, \"cloneNumber\", Primitive.Number);\n      this.root.attributeCollection.putEmergent(organism, \"cloneNumber01\", Primitive.Number);\n      this.root.attributeCollection.putEmergent(organism, \"radialCloneNumber01\", Primitive.Number);\n      this.root.attributeCollection.assignNumber(clones, 1);\n    }\n\n    return organism;\n  }\n\n  remove(organism) {\n    console.assert(organism !== this.rootOrganism);\n\n    for (const attribute of this.root.attributeCollection.getAttributesForOrganism(\n      organism\n    )) {\n      this.root.attributeCollection.remove(attribute);\n    }\n    for (const organ of this.getChildren(organism)) {\n      this.remove(organ);\n    }\n    this.organs = wu(this.organs)\n      .reject(\n        (t) => t.organId === organism.id || t.superorganismId === organism.id\n      )\n      .toArray();\n    this.organisms = wu(this.organisms)\n      .reject((t) => t.id === organism.id)\n      .toArray();\n  }\n\n  spawn() {\n    const metacircle = this.root.metaorganismCollection.getFromName(\"Circle\");\n    const organism = this.putFromMeta(null, metacircle);\n    organism.name = organism.id;\n    return organism;\n  }\n\n  putFromMetaname(name, metaname: string) {\n    const metaorganism = this.root.metaorganismCollection.getFromName(metaname);\n    return this.putFromMeta(name, metaorganism);\n  }\n\n  addChild(superorganism, organ) {\n    console.assert(organ);\n    console.assert(superorganism);\n    this.organs = wu(this.organs)\n      .reject((t) => t.organId === organ.id)\n      .toArray();\n    this.organs.push({ superorganismId: superorganism.id, organId: organ.id });\n    return organ;\n  }\n\n  getChildren(superorganism) {\n    const organEntries = wu(this.organs).filter(\n      (t) => t.superorganismId === superorganism.id\n    );\n    return organEntries.map((t) => this.getOrganismFromId(t.organId));\n  }\n\n  putFromMetaWithoutAttributes(name, metaorganism) {\n    const organism = makeOrganism({ name }) as any;\n    if (organism.name === undefined) {\n      organism.name = organism.id;\n    }\n    organism.metaorganismId = metaorganism.id;\n    this.organisms.push(organism);\n    console.assert(organism !== undefined);\n    return organism;\n  }\n\n  putSuperOrganismWithoutAttributes(name: string) {\n    const answer = this.putFromMetaWithoutAttributes(\n      name,\n      this.root.metaorganismCollection.getFromName(\"SuperOrganism\")\n    );\n    console.assert(answer);\n    return answer;\n  }\n\n  initRootOrganism() {\n    if (this.rootOrganism) return;\n\n    this.rootOrganism = this.putFromMetaname(\"The Void\", \"TheVoid\");\n    this.root.attributeCollection.putEmergent(this.rootOrganism, \"time\");\n    this.root.attributeCollection.putEmergent(this.rootOrganism, \"time01\");\n    this.root.attributeCollection.putEmergent(\n      this.rootOrganism,\n      \"window.height\"\n    );\n    this.root.attributeCollection.putEmergent(\n      this.rootOrganism,\n      \"window.width\"\n    );\n    this.root.attributeCollection.putEmergent(\n      this.rootOrganism,\n      \"window.center\",\n      Metastruct.builtinMetastructs.Vector\n    );\n    return this.rootOrganism;\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}