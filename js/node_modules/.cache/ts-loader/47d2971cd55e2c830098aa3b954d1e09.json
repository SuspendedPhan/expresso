{"remainingRequest":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js??ref--14-2!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/models/DeadStore.ts","dependencies":[{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/models/DeadStore.ts","mtime":1714946187075},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/babel.config.js","mtime":1714946187052},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js","mtime":1714947394795},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js","mtime":1714947267504},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js","mtime":1714947270651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Store","Functions","DeadStore","fromLiveStore","liveStore","deadStore","projects","project","getProjects","push","toDeadProject","toLiveStore","emModule","map","deadProject","toLiveProject","liveProject","deadFunctions","vectorToArray","getFunctions","liveFunction","toDeadFunction","id","getId","rootOrganism","toDeadOrganism","getRootOrganism","functions","liveRootOrganism","toLiveOrganism","Project","makeUnique","liveFunctionById","Map","deadFunctionById","liveParameterById","deadFunction","toLiveFunction","addFunction","set","liveParameter","vectorToIterable","getParameters","liveAttributeById","deadAttributeById","liveAttributes","Array","from","getLiveAttributesDeep","deadAttributes","getDeadAttributesDeep","liveAttribute","deadAttribute","functionId","entries","get","liveRootNode","toLiveNode","rootNode","setRootNode","liveEditableAttributes","filter","attribute","constructor","name","liveEditableAttribute","deadEditableAttribute","liveOrganism","getName","attributes","getAttributes","toDeadAttribute","suborganisms","getSuborganisms","liveSuborganism","deadOrganism","Organism","toLiveAttribute","addAttribute","deadSuborganism","addSuborganism","answer","type","getIsEditableAttribute","toDeadNode","getRootNode","EditableAttribute","CloneNumberAttribute","IntrinsicAttribute","liveNode","deadNode","nodeType","value","getValue","isBinaryOpNode","a","getA","b","getB","referenceAttributeId","getReferenceRaw","deadArgumentByParameterId","parameter","getCalledFunction","argument","getArgumentCollection","getArgument","argumentByParameterId","parameterId","getFunctionParameter","console","error","toLiveBinaryOpNode","AddOpNode","SubOpNode","MulOpNode","DivOpNode","ModOpNode","NumberNode","AttributeReferenceNode","FunctionCallNode","deadArgument","Object","liveArgument","setArgument","assert","ParameterNode","deadBinaryOpNode","BinaryOpNodeClass","liveA","liveB","deadParameters","parameters","Function","deadParameter","FunctionParameter","addParameter","suborganism"],"sources":["/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/models/DeadStore.ts"],"sourcesContent":["import Store from \"@/models/Store\";\nimport Functions from \"@/code/Functions\";\nimport {elementAt} from \"rxjs/operators\";\n\nexport default class DeadStore {\n  public static fromLiveStore(liveStore: Store) {\n    const deadStore = {\n      projects: [] as any\n    };\n    for (const project of liveStore.getProjects()) {\n      deadStore.projects.push(this.toDeadProject(project))\n    }\n    return deadStore;\n  }\n\n  public static toLiveStore(deadStore, emModule) {\n    return new Store(null, deadStore.projects.map(deadProject => this.toLiveProject(deadProject, emModule)));\n  }\n\n\n  private static toDeadProject(liveProject) {\n    const deadFunctions = Functions.vectorToArray(liveProject.getFunctions()).map(liveFunction => this.toDeadFunction(liveFunction));\n    return {\n      id: liveProject.getId(),\n      rootOrganism: this.toDeadOrganism(liveProject.getRootOrganism()),\n      functions: deadFunctions\n    };\n  }\n\n  private static toLiveProject(deadProject, emModule) {\n    const liveRootOrganism = this.toLiveOrganism(deadProject.rootOrganism, emModule);\n\n    // root organism NEEDS to have its dead attributes revived before adding it to the project because of Project::addRootAttributes\n    const liveProject = emModule.Project.makeUnique(liveRootOrganism);\n\n    const liveFunctionById = new Map();\n    const deadFunctionById = new Map();\n    const liveParameterById = new Map();\n    for (const deadFunction of deadProject.functions) {\n      const liveFunction = this.toLiveFunction(deadFunction, emModule);\n      liveProject.addFunction(liveFunction);\n      liveFunctionById.set(deadFunction.id, liveFunction);\n      deadFunctionById.set(deadFunction.id, deadFunction);\n      for (const liveParameter of Functions.vectorToIterable(liveFunction.getParameters())) {\n        liveParameterById.set(liveParameter.getId(), liveParameter);\n      }\n    }\n\n    const liveAttributeById = new Map<string, any>();\n    const deadAttributeById = new Map<string, any>();\n    const liveAttributes: any = Array.from(this.getLiveAttributesDeep(liveRootOrganism));\n    const deadAttributes: any = this.getDeadAttributesDeep(deadProject.rootOrganism);\n    for (const liveAttribute of liveAttributes) {\n      liveAttributeById.set(liveAttribute.getId(), liveAttribute);\n    }\n    for (const deadAttribute of deadAttributes) {\n      deadAttributeById.set(deadAttribute.id, deadAttribute);\n    }\n\n    for (const [functionId, liveFunction] of liveFunctionById.entries()) {\n      const deadFunction = deadFunctionById.get(functionId);\n      const liveRootNode = this.toLiveNode(deadFunction.rootNode, emModule, liveAttributeById, liveFunctionById, liveParameterById);\n      liveFunction.setRootNode(liveRootNode);\n    }\n\n    const liveEditableAttributes = liveAttributes.filter(attribute => attribute.constructor.name === 'EditableAttribute');\n    for (const liveEditableAttribute of liveEditableAttributes) {\n      const deadEditableAttribute = deadAttributeById.get(liveEditableAttribute.getId());\n      const liveRootNode = this.toLiveNode(deadEditableAttribute.rootNode, emModule, liveAttributeById, liveFunctionById, liveParameterById);\n      liveEditableAttribute.setRootNode(liveRootNode);\n    }\n    return liveProject;\n  }\n\n  private static toDeadOrganism(liveOrganism) {\n    return {\n      id: liveOrganism.getId(),\n      name: liveOrganism.getName(),\n      attributes: Functions.vectorToArray(liveOrganism.getAttributes()).map(attribute => this.toDeadAttribute(attribute)),\n      suborganisms: Functions.vectorToArray(liveOrganism.getSuborganisms()).map(liveSuborganism => this.toDeadOrganism(liveSuborganism))\n    }\n  }\n\n  private static toLiveOrganism(deadOrganism, emModule) {\n    const liveOrganism = emModule.Organism.makeUnique(deadOrganism.name, deadOrganism.id);\n    for (const deadAttribute of deadOrganism.attributes) {\n      const liveAttribute = this.toLiveAttribute(deadAttribute, liveOrganism, emModule);\n      liveOrganism.addAttribute(liveAttribute);\n    }\n    for (const deadSuborganism of deadOrganism.suborganisms) {\n      liveOrganism.addSuborganism(this.toLiveOrganism(deadSuborganism, emModule));\n    }\n    return liveOrganism;\n  }\n\n\n  private static toDeadAttribute(liveAttribute) {\n    const answer = {\n      id: liveAttribute.getId(),\n      name: liveAttribute.getName(),\n      type: liveAttribute.constructor.name,\n    } as any;\n\n    if (liveAttribute.getIsEditableAttribute()) {\n      answer.rootNode = this.toDeadNode(liveAttribute.getRootNode());\n    }\n\n    return answer;\n  }\n\n  private static toLiveAttribute(deadAttribute, liveOrganism, emModule) {\n    if (deadAttribute.type == \"EditableAttribute\") {\n      return emModule.EditableAttribute.makeUnique(deadAttribute.name, liveOrganism, deadAttribute.id);\n    } else if (deadAttribute.type == \"CloneNumberAttribute\") {\n      return emModule.CloneNumberAttribute.makeUnique(liveOrganism, deadAttribute.id);\n    } else if (deadAttribute.type == \"IntrinsicAttribute\") {\n      return emModule.IntrinsicAttribute.makeUnique(deadAttribute.name, liveOrganism, deadAttribute.id);\n    }\n  }\n\n  private static toDeadNode(liveNode) {\n    const deadNode = {} as any;\n    deadNode.id = liveNode.getId();\n    deadNode.nodeType = liveNode.constructor.name;\n\n    if (liveNode.constructor.name === 'NumberNode') {\n      deadNode.value = liveNode.getValue();\n    } else if (Store.isBinaryOpNode(liveNode)) {\n      deadNode.a = this.toDeadNode(liveNode.getA());\n      deadNode.b = this.toDeadNode(liveNode.getB());\n    } else if (liveNode.constructor.name === 'AttributeReferenceNode') {\n      deadNode.referenceAttributeId = liveNode.getReferenceRaw().getId();\n    } else if (liveNode.constructor.name === 'FunctionCallNode') {\n      const deadArgumentByParameterId = {};\n      for (const parameter of Functions.vectorToIterable(liveNode.getCalledFunction().getParameters())) {\n        const argument = liveNode.getArgumentCollection().getArgument(parameter);\n        deadArgumentByParameterId[parameter.getId()] = this.toDeadNode(argument);\n      }\n      deadNode.functionId = liveNode.getCalledFunction().getId();\n      deadNode.argumentByParameterId = deadArgumentByParameterId;\n    } else if (liveNode.constructor.name === 'ParameterNode') {\n      deadNode.parameterId = liveNode.getFunctionParameter().getId();\n    } else {\n      console.error('toDeadNode: unknown node type ' + liveNode.constructor.name);\n    }\n    return deadNode;\n  }\n\n  private static toLiveNode(deadNode, emModule, liveAttributeById, liveFunctionById, liveParameterById) {\n    if (deadNode.nodeType === 'AddOpNode') {\n      return DeadStore.toLiveBinaryOpNode(deadNode, emModule.AddOpNode, emModule, liveAttributeById, liveFunctionById, liveParameterById);\n    } else if (deadNode.nodeType === 'SubOpNode') {\n      return DeadStore.toLiveBinaryOpNode(deadNode, emModule.SubOpNode, emModule, liveAttributeById, liveFunctionById, liveParameterById);\n    } else if (deadNode.nodeType === 'MulOpNode') {\n      return DeadStore.toLiveBinaryOpNode(deadNode, emModule.MulOpNode, emModule, liveAttributeById, liveFunctionById, liveParameterById);\n    } else if (deadNode.nodeType === 'DivOpNode') {\n      return DeadStore.toLiveBinaryOpNode(deadNode, emModule.DivOpNode, emModule, liveAttributeById, liveFunctionById, liveParameterById);\n    } else if (deadNode.nodeType === 'ModOpNode') {\n      return DeadStore.toLiveBinaryOpNode(deadNode, emModule.ModOpNode, emModule, liveAttributeById, liveFunctionById, liveParameterById);\n    } else if (deadNode.nodeType === 'NumberNode') {\n      return emModule.NumberNode.makeUnique(deadNode.value, deadNode.id);\n    } else if (deadNode.nodeType === 'AttributeReferenceNode') {\n      return emModule.AttributeReferenceNode.makeUnique(liveAttributeById.get(deadNode.referenceAttributeId), deadNode.id);\n    } else if (deadNode.nodeType === 'FunctionCallNode') {\n      const liveFunction = liveFunctionById.get(deadNode.functionId);\n      const liveNode = emModule.FunctionCallNode.makeUnique(liveFunction, deadNode.id);\n      const liveParameterById = new Map();\n      for (const parameter of Functions.vectorToIterable(liveFunction.getParameters())) {\n        liveParameterById.set(parameter.getId(), parameter);\n      }\n      for (const [parameterId, deadArgument] of Object.entries(deadNode.argumentByParameterId)) {\n        const liveParameter = liveParameterById.get(parameterId);\n        const liveArgument = this.toLiveNode(deadArgument, emModule, liveAttributeById, liveFunctionById, liveParameterById);\n        liveNode.getArgumentCollection().setArgument(liveParameter, liveArgument);\n      }\n      return liveNode;\n    } else if (deadNode.nodeType === 'ParameterNode') {\n      const liveParameter = liveParameterById.get(deadNode.parameterId);\n      console.assert(liveParameter, deadNode.parameterId);\n      return emModule.ParameterNode.makeUnique(liveParameter);\n    } else {\n      console.error(deadNode.nodeType);\n    }\n  }\n\n  private static toLiveBinaryOpNode(deadBinaryOpNode, BinaryOpNodeClass: any, emModule, liveAttributeById, liveFunctionById, liveParameterById) {\n    const liveA = this.toLiveNode(deadBinaryOpNode.a, emModule, liveAttributeById, liveFunctionById, liveParameterById);\n    const liveB = this.toLiveNode(deadBinaryOpNode.b, emModule, liveAttributeById, liveFunctionById, liveParameterById);\n    return BinaryOpNodeClass.makeUnique(liveA, liveB, deadBinaryOpNode.id);\n  }\n\n  private static toDeadFunction(liveFunction: any) {\n    const deadParameters = Functions.vectorToArray(liveFunction.getParameters()).map(liveParameter => ({\n      id: liveParameter.getId(),\n      name: liveParameter.getName()\n    }));\n    return {\n      id: liveFunction.getId(),\n      name: liveFunction.getName(),\n      parameters: deadParameters,\n      rootNode: this.toDeadNode(liveFunction.getRootNode())\n    }\n  }\n\n  private static toLiveFunction(deadFunction, emModule) {\n    const liveFunction = emModule.Function.makeUnique(deadFunction.name, deadFunction.id);\n    for (const deadParameter of deadFunction.parameters) {\n      const liveParameter = emModule.FunctionParameter.makeUnique(deadParameter.id, deadParameter.name);\n      liveFunction.addParameter(liveParameter);\n    }\n    return liveFunction;\n  }\n\n  private static* getLiveAttributesDeep(liveOrganism: any) {\n    yield* Functions.vectorToIterable(liveOrganism.getAttributes());\n    for (const suborganism of Functions.vectorToIterable(liveOrganism.getSuborganisms())) {\n      yield* this.getLiveAttributesDeep(suborganism);\n    }\n  }\n\n  private static* getDeadAttributesDeep(deadOrganism: any) {\n    yield* deadOrganism.attributes;\n    for (const deadSuborganism of deadOrganism.suborganisms) {\n      yield* this.getDeadAttributesDeep(deadSuborganism);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}