{"remainingRequest":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js??ref--14-2!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/store/Metafun.ts","dependencies":[{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/store/Metafun.ts","mtime":1714946187077},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/babel.config.js","mtime":1714946187052},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js","mtime":1714947394795},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js","mtime":1714947267504},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js","mtime":1714947270651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["wu","seedrandom","EasingMetafuns","Metastruct","Primitive","Vector","builtinMetastructs","invlerp","start","end","x","clamp01","t","MetafunStore","constructor","root","metafuns","name","paramCount","evalTypedArgs","a","b","datatype","Number","value","y","inputTypesFromOutputType","outputType","ret","defaultOutputType","eval","isNaN","Infinity","Math","abs","fx","min","max","t01","twindow","frequency","t01FreqEval","t01Mod","divisor","cloneNumber","clones","windowWidth","windowHeight","time01","mostRecentClickCoordinates","seed","vector","angle01","vectorVal","angle01Val","radians","PI","cos","sin","type","undefined","scalar","scalarVal","duration0","duration1","duration2","time","duration0Eval","duration1Eval","duration2Eval","timeEval","totalDuration","windowTime","t0","t1","t2","SequenceOutput","value0","value1","value2","value0Eval","t0Eval","value1Eval","t1Eval","value2Eval","t2Eval","getSerialized","getFromName","answer","find","row","console","assert","getFuns","deserialize"],"sources":["/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/store/Metafun.ts"],"sourcesContent":["import wu from \"wu\";\nimport { Root } from \"./Root\";\nimport seedrandom from \"seedrandom\";\nimport Types from \"./Types\";\nimport EasingMetafuns from \"./EasingMetafuns\";\nimport Metastruct from \"@/models/Metastruct\";\nimport { Primitive } from \"@/models/Type\";\n\ninterface Arg {\n  datatype: Types;\n  value: any;\n}\n\nconst Vector = Metastruct.builtinMetastructs.Vector;\n\nfunction invlerp(start, end, x) {\n  return (x - start) / (end - start);\n}\n\nfunction clamp01(t) {\n  if (t < 0) return 0;\n  if (t > 1) return 1;\n  return t;\n}\n\nexport default class MetafunStore {\n  metafuns = [\n    ...EasingMetafuns,\n    {\n      name: \"Add\",\n      paramCount: 2,\n      evalTypedArgs: (a, b) => {\n        if (a.datatype === Primitive.Number) {\n          return a.value + b.value;\n        } else if (a.datatype === Vector) {\n          return {\n            x: a.value.x + b.value.x,\n            y: a.value.y + b.value.y\n          };\n        }\n      },\n      inputTypesFromOutputType: outputType => {\n        const ret = [outputType, outputType];\n        return ret;\n      },\n      defaultOutputType: Primitive.Number\n    },\n    {\n      name: \"Multiply\",\n      paramCount: 2,\n      eval: (a, b) => a * b\n    },\n    {\n      name: \"Divide\",\n      paramCount: 2,\n      eval: (a, b) => {\n        const ret = a / b;\n\n        // super hacky fix to avoid \"divide by zero\" from locking up the editor\n        if (isNaN(ret) || ret == Infinity) {\n          return 0;\n        }\n        return ret;\n      }\n    },\n    {\n      name: \"Subtract\",\n      paramCount: 2,\n      eval: (a, b) => a - b\n    },\n    {\n      name: \"Modulus\",\n      paramCount: 2,\n      eval: (a, b) => a % b\n    },\n    {\n      name: \"Abs\",\n      paramCount: 1,\n      eval: a => Math.abs(a)\n    },\n    {\n      name: \"Lerp\",\n      paramCount: 3,\n      eval: (a, b, t) => a + t * (b - a)\n    },\n    {\n      name: \"InvLerp01\",\n      paramCount: 3,\n      eval: (a, b, fx) =>\n        Math.min(1, Math.max(0, fx / (b - a)))\n    },\n    {\n      name: \"Distance\",\n      paramCount: 2,\n      eval: (a, b) => Math.abs(a - b)\n    },\n    {\n      name: \"SoloFront\",\n      paramCount: 3,\n      eval: (fx, t01, twindow) => (t01 < twindow ? fx : 0)\n    },\n    {\n      name: \"Tri\",\n      paramCount: 1,\n      eval: a => 1 - Math.abs(a * 2 - 1)\n    },\n    {\n      name: \"Saw\",\n      paramCount: 2,\n      eval: (t01, frequency) => {\n        const ret = (t01 * frequency) % 1;\n        return ret;\n      }\n    },\n    {\n      name: \"Square\",\n      paramCount: 2,\n      eval: (t01, frequency) => {\n        const t01FreqEval = t01 * frequency;\n        const t01Mod = ((t01FreqEval % 1) + 1) % 1;\n        if (t01Mod < 0.5) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    },\n    {\n      name: \"Mod1\",\n      paramCount: 1,\n      eval: a => a % 1\n    },\n    {\n      name: \"Mod01\",\n      paramCount: 2,\n      eval: (a, divisor) => {\n        const ret = (a % divisor) / divisor;\n        return ret;\n      }\n    },\n    {\n      name: \"CloneNumber11\",\n      paramCount: 2,\n      eval: (cloneNumber, clones) =>\n        (cloneNumber / (clones - 1) - 0.5) * 2\n    },\n    {\n      name: \"CenterX\",\n      paramCount: 1,\n      eval: windowWidth => windowWidth / 2\n    },\n    {\n      name: \"CenterY\",\n      paramCount: 1,\n      eval: windowHeight => windowHeight / 2\n    },\n    {\n      name: \"Time11\",\n      paramCount: 1,\n      eval: time01 => (time01 - 0.5) * 2\n    },\n    {\n      name: \"X11\",\n      paramCount: 2,\n      eval: (x, windowWidth) =>\n        Math.abs(x / windowWidth - 0.5) * 2\n    },\n    {\n      name: \"Mousex\",\n      paramCount: 0,\n      eval: () => this.root.mostRecentClickCoordinates.x\n    },\n    {\n      name: \"Mousey\",\n      paramCount: 0,\n      eval: () => this.root.mostRecentClickCoordinates.y\n    },\n    {\n      name: \"Random\",\n      paramCount: 1,\n      eval: seed => seedrandom(seed)()\n    },\n\n    {\n      name: \"Rotate\",\n      paramCount: 2,\n      eval: (vector, angle01) => {\n        const vectorVal = vector;\n        const angle01Val = angle01;\n        const radians = angle01Val * 2 * Math.PI;\n        const ret = {\n          x: vectorVal.x * Math.cos(radians) - vectorVal.y * Math.sin(radians),\n          y: vectorVal.x * Math.sin(radians) + vectorVal.y * Math.cos(radians)\n        };\n        return ret;\n      },\n      inputTypesFromOutputType: type => {\n        if (type === Vector) {\n          return [Vector, Primitive.Number];\n        } else {\n          return undefined;\n        }\n      },\n      defaultOutputType: Vector\n    },\n    {\n      name: \"Scale\",\n      paramCount: 2,\n      eval: (vector, scalar) => {\n        const vectorVal = vector;\n        const scalarVal = scalar;\n        return {\n          x: vectorVal.x * scalarVal,\n          y: vectorVal.y * scalarVal\n        };\n      },\n      inputTypesFromOutputType: type => {\n        if (type === Vector) {\n          return [Vector, Primitive.Number];\n        } else {\n          return undefined;\n        }\n      },\n      defaultOutputType: Vector\n    },\n    {\n      name: \"RotateFromUp\",\n      paramCount: 1,\n      eval: angle01 => {\n        const vectorVal = { x: 0, y: -1 };\n        const angle01Val = angle01;\n        const radians = angle01Val * 2 * Math.PI;\n        const ret = {\n          x: vectorVal.x * Math.cos(radians) - vectorVal.y * Math.sin(radians),\n          y: vectorVal.x * Math.sin(radians) + vectorVal.y * Math.cos(radians)\n        };\n        return ret;\n      },\n      inputTypesFromOutputType: type => {\n        if (type === Vector) {\n          return [Primitive.Number];\n        } else {\n          return undefined;\n        }\n      },\n      defaultOutputType: Vector\n    },\n    {\n      name: \"Sequence3\",\n      paramCount: 4,\n      eval: (duration0, duration1, duration2, time) => {\n        const duration0Eval = duration0;\n        const duration1Eval = duration1;\n        const duration2Eval = duration2;\n        const timeEval = time;\n        const totalDuration = duration0Eval + duration1Eval + duration2Eval;\n        const windowTime = timeEval % totalDuration;\n        const ret = {\n          t0: clamp01(invlerp(0, duration0Eval, windowTime)) || 0,\n          t1:\n            clamp01(\n              invlerp(duration0Eval, duration0Eval + duration1Eval, windowTime)\n            ) || 0,\n          t2:\n            clamp01(\n              invlerp(\n                duration0Eval + duration1Eval,\n                duration0Eval + duration1Eval + duration2Eval,\n                windowTime\n              )\n            ) || 0\n        };\n        return ret;\n      },\n      inputTypesFromOutputType: type => {\n        if (type === Metastruct.builtinMetastructs.SequenceOutput) {\n          return [\n            Primitive.Number,\n            Primitive.Number,\n            Primitive.Number,\n            Primitive.Number\n          ];\n        } else {\n          return undefined;\n        }\n      },\n      defaultOutputType: Metastruct.builtinMetastructs.SequenceOutput\n    },\n    {\n      name: \"MapSequence3\",\n      paramCount: 6,\n      eval: (value0, t0, value1, t1, value2, t2) => {\n        const value0Eval = value0;\n        const t0Eval = t0;\n        const value1Eval = value1;\n        const t1Eval = t1;\n        const value2Eval = value2;\n        const t2Eval = t2;\n        if (t0Eval > 0 && t0Eval < 1) {\n          return value0Eval;\n        } else if (t1Eval > 0 && t1Eval < 1) {\n          return value1Eval;\n        } else if (t2Eval > 0 && t2Eval < 1) {\n          return value2Eval;\n        } else {\n          return value0Eval;\n        }\n      },\n    }\n  ];\n\n  constructor(private root: Root) {}\n\n  getSerialized() {\n    return {};\n  }\n\n  getFromName(name) {\n    const answer = wu(this.metafuns).find(row => row.name === name);\n    console.assert(answer !== undefined, \"fun name\");\n    return answer;\n  }\n\n  getFuns() {\n    return this.metafuns;\n  }\n\n  deserialize() {}\n}\n"],"mappings":"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","ignoreList":[]}]}