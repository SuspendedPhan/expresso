{"remainingRequest":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js??ref--14-2!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/code/Layout.ts","dependencies":[{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/code/Layout.ts","mtime":1714946187068},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/babel.config.js","mtime":1714946187052},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js","mtime":1714947394795},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js","mtime":1714947267504},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js","mtime":1714947270651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmV4cG9ydCBjbGFzcyBMYXlvdXQgewogIGNvbnN0cnVjdG9yKGdldFdpZHRoLCBnZXRIZWlnaHQsIGdldENoaWxkcmVuLCBnZXRLZXksIGhvcml6b250YWxNYXJnaW4sIHZlcnRpY2FsTWFyZ2luKSB7CiAgICB0aGlzLmdldFdpZHRoID0gZ2V0V2lkdGg7CiAgICB0aGlzLmdldEhlaWdodCA9IGdldEhlaWdodDsKICAgIHRoaXMuZ2V0Q2hpbGRyZW4gPSBnZXRDaGlsZHJlbjsKICAgIHRoaXMuZ2V0S2V5ID0gZ2V0S2V5OwogICAgdGhpcy5ob3Jpem9udGFsTWFyZ2luID0gaG9yaXpvbnRhbE1hcmdpbjsKICAgIHRoaXMudmVydGljYWxNYXJnaW4gPSB2ZXJ0aWNhbE1hcmdpbjsKICB9CiAgLy8gdHJlZVJvb3Qgd2lsbCBhbHdheXMgYmUgcG9zaXRpb25lZCBhdCA8MCwgMD4KICBjYWxjdWxhdGUodHJlZVJvb3QpIHsKICAgIGNvbnN0IHN1YnRyZWVXaWR0aHNCeUtleSA9IG5ldyBNYXAoKTsKICAgIGNvbnN0IHN1YnRyZWVIZWlnaHRzQnlLZXkgPSBuZXcgTWFwKCk7CiAgICB0aGlzLmNhbGN1bGF0ZVN1YnRyZWVXaWR0aCh0cmVlUm9vdCwgc3VidHJlZVdpZHRoc0J5S2V5KTsKICAgIHRoaXMuY2FsY3VsYXRlU3VidHJlZUhlaWdodCh0cmVlUm9vdCwgc3VidHJlZUhlaWdodHNCeUtleSk7CiAgICBjb25zdCB0cmVlUm9vdEtleSA9IHRoaXMuZ2V0S2V5KHRyZWVSb290KTsKICAgIGNvbnN0IHRvdGFsV2lkdGggPSBzdWJ0cmVlV2lkdGhzQnlLZXkuZ2V0KHRyZWVSb290S2V5KTsKICAgIGNvbnN0IHRvdGFsSGVpZ2h0ID0gc3VidHJlZUhlaWdodHNCeUtleS5nZXQodHJlZVJvb3RLZXkpOwogICAgY29uc3Qgcm9vdFdvcmxkTGVmdCA9IHRvdGFsV2lkdGggLyAyIC0gdGhpcy5nZXRXaWR0aCh0cmVlUm9vdCkgLyAyOwogICAgY29uc3Qgcm9vdFdvcmxkVG9wID0gMDsKICAgIGNvbnN0IGxvY2FsUG9zaXRpb25zQnlLZXkgPSBuZXcgTWFwKCk7CiAgICBsb2NhbFBvc2l0aW9uc0J5S2V5LnNldCh0cmVlUm9vdEtleSwgewogICAgICBsZWZ0OiByb290V29ybGRMZWZ0LAogICAgICB0b3A6IHJvb3RXb3JsZFRvcCwKICAgICAga2V5OiB0cmVlUm9vdEtleQogICAgfSk7CiAgICB0aGlzLmNhbGN1bGF0ZUZvckNoaWxkcmVuKHRyZWVSb290LCBsb2NhbFBvc2l0aW9uc0J5S2V5LCBzdWJ0cmVlV2lkdGhzQnlLZXkpOwogICAgY29uc3QgbGluZXMgPSBbXTsKICAgIHRoaXMuY2FsY3VsYXRlTGluZXNGcm9tUGFyZW50VG9DaGlsZHJlbih0cmVlUm9vdCwgewogICAgICBsZWZ0OiByb290V29ybGRMZWZ0LAogICAgICB0b3A6IHJvb3RXb3JsZFRvcAogICAgfSwgbG9jYWxQb3NpdGlvbnNCeUtleSwgbGluZXMpOwogICAgcmV0dXJuIHsKICAgICAgbG9jYWxQb3NpdGlvbnNCeUtleSwKICAgICAgbGluZXMsCiAgICAgIHRvdGFsV2lkdGgsCiAgICAgIHRvdGFsSGVpZ2h0CiAgICB9OwogIH0KICAvKioKICAgKiBMb2NhbCBwb3NpdGlvbnMsIHN1YnRyZWUgd2lkdGhzLCBhbmQgc3VidHJlZSBoZWlnaHRzLgogICAqLwogIGNhbGN1bGF0ZUZvckNoaWxkcmVuKHN1YnJvb3QsIGxvY2FsUG9zaXRpb25zQnlLZXksIHN1YnRyZWVXaWR0aHNCeUtleSkgewogICAgY29uc3Qgc3Vicm9vdEhlaWdodCA9IHRoaXMuZ2V0SGVpZ2h0KHN1YnJvb3QpOwogICAgY29uc3Qgc3Vicm9vdFdpZHRoID0gdGhpcy5nZXRXaWR0aChzdWJyb290KTsKICAgIGNvbnN0IGNoaWxkcmVuV2lkdGggPSB0aGlzLmNhbGN1bGF0ZUNoaWxkcmVuV2lkdGgoc3Vicm9vdCwgc3VidHJlZVdpZHRoc0J5S2V5KTsKICAgIGxldCBuZXh0TGVmdEJvdW5kID0gc3Vicm9vdFdpZHRoIC8gMiAtIGNoaWxkcmVuV2lkdGggLyAyOwogICAgZm9yIChjb25zdCBjaGlsZCBvZiB0aGlzLmdldENoaWxkcmVuKHN1YnJvb3QpKSB7CiAgICAgIGNvbnN0IGNoaWxkS2V5ID0gdGhpcy5nZXRLZXkoY2hpbGQpOwogICAgICBjb25zdCBjaGlsZFN1YnRyZWVXaWR0aCA9IHN1YnRyZWVXaWR0aHNCeUtleS5nZXQoY2hpbGRLZXkpOwogICAgICBjb25zdCBjaGlsZFdpZHRoID0gdGhpcy5nZXRXaWR0aChjaGlsZCk7CiAgICAgIGNvbnN0IGNoaWxkWCA9IG5leHRMZWZ0Qm91bmQgKyBjaGlsZFN1YnRyZWVXaWR0aCAvIDIgLSBjaGlsZFdpZHRoIC8gMjsKICAgICAgbmV4dExlZnRCb3VuZCArPSBjaGlsZFN1YnRyZWVXaWR0aCArIHRoaXMuaG9yaXpvbnRhbE1hcmdpbjsKICAgICAgY29uc3QgY2hpbGRZID0gc3Vicm9vdEhlaWdodCArIHRoaXMudmVydGljYWxNYXJnaW47CiAgICAgIGxvY2FsUG9zaXRpb25zQnlLZXkuc2V0KGNoaWxkS2V5LCB7CiAgICAgICAgbGVmdDogY2hpbGRYLAogICAgICAgIHRvcDogY2hpbGRZLAogICAgICAgIGtleTogY2hpbGRLZXkKICAgICAgfSk7CiAgICAgIHRoaXMuY2FsY3VsYXRlRm9yQ2hpbGRyZW4oY2hpbGQsIGxvY2FsUG9zaXRpb25zQnlLZXksIHN1YnRyZWVXaWR0aHNCeUtleSk7CiAgICB9CiAgfQogIGNhbGN1bGF0ZVN1YnRyZWVXaWR0aChzdWJyb290LCBzdWJ0cmVlV2lkdGhzQnlLZXkpIHsKICAgIGlmIChzdWJ0cmVlV2lkdGhzQnlLZXkuaGFzKHRoaXMuZ2V0S2V5KHN1YnJvb3QpKSkgewogICAgICByZXR1cm47CiAgICB9CiAgICBjb25zdCBjaGlsZHJlbldpZHRoID0gdGhpcy5jYWxjdWxhdGVDaGlsZHJlbldpZHRoKHN1YnJvb3QsIHN1YnRyZWVXaWR0aHNCeUtleSk7CiAgICBjb25zdCBrZXkgPSB0aGlzLmdldEtleShzdWJyb290KTsKICAgIGNvbnN0IHdpZHRoID0gTWF0aC5tYXgoY2hpbGRyZW5XaWR0aCwgdGhpcy5nZXRXaWR0aChzdWJyb290KSk7CiAgICBzdWJ0cmVlV2lkdGhzQnlLZXkuc2V0KGtleSwgd2lkdGgpOwogIH0KICBjYWxjdWxhdGVTdWJ0cmVlSGVpZ2h0KHN1YnJvb3QsIHN1YnRyZWVIZWlnaHRzQnlLZXkpIHsKICAgIGlmIChzdWJ0cmVlSGVpZ2h0c0J5S2V5Lmhhcyh0aGlzLmdldEtleShzdWJyb290KSkpIHsKICAgICAgcmV0dXJuOwogICAgfQogICAgY29uc3QgY2hpbGRyZW4gPSBBcnJheS5mcm9tKHRoaXMuZ2V0Q2hpbGRyZW4oc3Vicm9vdCkpOwogICAgaWYgKGNoaWxkcmVuLmxlbmd0aCA9PT0gMCkgewogICAgICBjb25zdCBzdWJyb290SGVpZ2h0ID0gdGhpcy5nZXRIZWlnaHQoc3Vicm9vdCk7CiAgICAgIHN1YnRyZWVIZWlnaHRzQnlLZXkuc2V0KHRoaXMuZ2V0S2V5KHN1YnJvb3QpLCBzdWJyb290SGVpZ2h0KTsKICAgICAgcmV0dXJuOwogICAgfQogICAgbGV0IG1heEhlaWdodCA9IDA7CiAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGNoaWxkcmVuKSB7CiAgICAgIHRoaXMuY2FsY3VsYXRlU3VidHJlZUhlaWdodChjaGlsZCwgc3VidHJlZUhlaWdodHNCeUtleSk7CiAgICAgIGNvbnN0IGNoaWxkSGVpZ2h0ID0gc3VidHJlZUhlaWdodHNCeUtleS5nZXQodGhpcy5nZXRLZXkoY2hpbGQpKTsKICAgICAgbWF4SGVpZ2h0ID0gTWF0aC5tYXgobWF4SGVpZ2h0LCBjaGlsZEhlaWdodCk7CiAgICB9CiAgICBjb25zdCBzdWJ0cmVlSGVpZ2h0ID0gdGhpcy5nZXRIZWlnaHQoc3Vicm9vdCkgKyB0aGlzLnZlcnRpY2FsTWFyZ2luICsgbWF4SGVpZ2h0OwogICAgc3VidHJlZUhlaWdodHNCeUtleS5zZXQodGhpcy5nZXRLZXkoc3Vicm9vdCksIHN1YnRyZWVIZWlnaHQpOwogIH0KICBjYWxjdWxhdGVDaGlsZHJlbldpZHRoKHN1YnJvb3QsIHN1YnRyZWVXaWR0aHNCeUtleSkgewogICAgbGV0IGNoaWxkcmVuV2lkdGggPSAwOwogICAgY29uc3QgY2hpbGRyZW4gPSBBcnJheS5mcm9tKHRoaXMuZ2V0Q2hpbGRyZW4oc3Vicm9vdCkpOwogICAgZm9yIChjb25zdCBjaGlsZCBvZiBjaGlsZHJlbikgewogICAgICB0aGlzLmNhbGN1bGF0ZVN1YnRyZWVXaWR0aChjaGlsZCwgc3VidHJlZVdpZHRoc0J5S2V5KTsKICAgICAgY29uc3QgY2hpbGRLZXkgPSB0aGlzLmdldEtleShjaGlsZCk7CiAgICAgIGNoaWxkcmVuV2lkdGggKz0gc3VidHJlZVdpZHRoc0J5S2V5LmdldChjaGlsZEtleSk7CiAgICB9CiAgICBjb25zdCBnYXBzID0gTWF0aC5tYXgoY2hpbGRyZW4ubGVuZ3RoIC0gMSwgMCk7CiAgICBjaGlsZHJlbldpZHRoICs9IGdhcHMgKiB0aGlzLmhvcml6b250YWxNYXJnaW47CiAgICByZXR1cm4gY2hpbGRyZW5XaWR0aDsKICB9CiAgY2FsY3VsYXRlTGluZXNGcm9tUGFyZW50VG9DaGlsZHJlbihzdWJyb290LCBzdWJyb290V29ybGRQb3NpdGlvbiwgbG9jYWxQb3NpdGlvbnNCeUtleSwgbGluZXMpIHsKICAgIGNvbnN0IHN1YnJvb3RXb3JsZENlbnRlciA9IHsKICAgICAgeDogc3Vicm9vdFdvcmxkUG9zaXRpb24ubGVmdCArIHRoaXMuZ2V0V2lkdGgoc3Vicm9vdCkgLyAyLAogICAgICB5OiBzdWJyb290V29ybGRQb3NpdGlvbi50b3AgKyB0aGlzLmdldEhlaWdodChzdWJyb290KSAvIDIKICAgIH07CiAgICBjb25zdCBjaGlsZHJlbiA9IHRoaXMuZ2V0Q2hpbGRyZW4oc3Vicm9vdCk7CiAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGNoaWxkcmVuKSB7CiAgICAgIGNvbnN0IGNoaWxkTG9jYWxQb3NpdGlvbiA9IGxvY2FsUG9zaXRpb25zQnlLZXkuZ2V0KHRoaXMuZ2V0S2V5KGNoaWxkKSk7CiAgICAgIGNvbnN0IGNoaWxkV29ybGRQb3NpdGlvbiA9IHsKICAgICAgICBsZWZ0OiBzdWJyb290V29ybGRQb3NpdGlvbi5sZWZ0ICsgY2hpbGRMb2NhbFBvc2l0aW9uLmxlZnQsCiAgICAgICAgdG9wOiBzdWJyb290V29ybGRQb3NpdGlvbi50b3AgKyBjaGlsZExvY2FsUG9zaXRpb24udG9wCiAgICAgIH07CiAgICAgIGNvbnN0IGNoaWxkV29ybGRDZW50ZXIgPSB7CiAgICAgICAgeDogY2hpbGRXb3JsZFBvc2l0aW9uLmxlZnQgKyB0aGlzLmdldFdpZHRoKGNoaWxkKSAvIDIsCiAgICAgICAgeTogY2hpbGRXb3JsZFBvc2l0aW9uLnRvcCArIHRoaXMuZ2V0SGVpZ2h0KGNoaWxkKSAvIDIKICAgICAgfTsKICAgICAgY29uc3QgbGluZSA9IHsKICAgICAgICBzdGFydFg6IHN1YnJvb3RXb3JsZENlbnRlci54LAogICAgICAgIHN0YXJ0WTogc3Vicm9vdFdvcmxkQ2VudGVyLnksCiAgICAgICAgZW5kWDogY2hpbGRXb3JsZENlbnRlci54LAogICAgICAgIGVuZFk6IGNoaWxkV29ybGRDZW50ZXIueQogICAgICB9OwogICAgICBsaW5lcy5wdXNoKGxpbmUpOwogICAgICB0aGlzLmNhbGN1bGF0ZUxpbmVzRnJvbVBhcmVudFRvQ2hpbGRyZW4oY2hpbGQsIGNoaWxkV29ybGRQb3NpdGlvbiwgbG9jYWxQb3NpdGlvbnNCeUtleSwgbGluZXMpOwogICAgfQogIH0KfQ=="},{"version":3,"names":["Layout","constructor","getWidth","getHeight","getChildren","getKey","horizontalMargin","verticalMargin","calculate","treeRoot","subtreeWidthsByKey","Map","subtreeHeightsByKey","calculateSubtreeWidth","calculateSubtreeHeight","treeRootKey","totalWidth","get","totalHeight","rootWorldLeft","rootWorldTop","localPositionsByKey","set","left","top","key","calculateForChildren","lines","calculateLinesFromParentToChildren","subroot","subrootHeight","subrootWidth","childrenWidth","calculateChildrenWidth","nextLeftBound","child","childKey","childSubtreeWidth","childWidth","childX","childY","has","width","Math","max","children","Array","from","length","maxHeight","childHeight","subtreeHeight","gaps","subrootWorldPosition","subrootWorldCenter","x","y","childLocalPosition","childWorldPosition","childWorldCenter","line","startX","startY","endX","endY","push"],"sources":["/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/code/Layout.ts"],"sourcesContent":["export interface Point {\n  left: number;\n  top: number;\n  key: any;\n}\n\n// relative to world\nexport interface Line {\n  startX: number;\n  startY: number;\n  endX: number;\n  endY: number;\n}\n\n// relative to parent\nexport type LocalPositionsByKey = Map<any, Point>;\nexport interface Output {\n  localPositionsByKey: LocalPositionsByKey;\n  lines: Line[];\n  totalWidth: number;\n  totalHeight: number;\n}\n\nexport class Layout {\n  constructor(\n    private getWidth: Function,\n    private getHeight: Function,\n    private getChildren: Function,\n    private getKey: Function,\n    private horizontalMargin: number,\n    private verticalMargin: number\n  ) {}\n\n  // treeRoot will always be positioned at <0, 0>\n  calculate(treeRoot): Output {\n    const subtreeWidthsByKey = new Map<any, number>();\n    const subtreeHeightsByKey = new Map<any, number>();\n    this.calculateSubtreeWidth(treeRoot, subtreeWidthsByKey);\n    this.calculateSubtreeHeight(treeRoot, subtreeHeightsByKey);\n\n    const treeRootKey = this.getKey(treeRoot);\n\n    const totalWidth = subtreeWidthsByKey.get(treeRootKey) as number;\n    const totalHeight = subtreeHeightsByKey.get(treeRootKey) as number;\n\n    const rootWorldLeft = totalWidth / 2 - this.getWidth(treeRoot) / 2;\n    const rootWorldTop = 0;\n\n    const localPositionsByKey = new Map<any, Point>();\n    localPositionsByKey.set(treeRootKey, { left: rootWorldLeft, top: rootWorldTop, key: treeRootKey });\n    this.calculateForChildren(\n      treeRoot,\n      localPositionsByKey,\n      subtreeWidthsByKey\n    );\n    const lines = [];\n\n\n\n    this.calculateLinesFromParentToChildren(\n      treeRoot,\n      { left: rootWorldLeft, top: rootWorldTop },\n      localPositionsByKey,\n      lines\n    );\n\n    return {\n      localPositionsByKey,\n      lines,\n      totalWidth,\n      totalHeight\n    };\n  }\n\n  /**\n   * Local positions, subtree widths, and subtree heights.\n   */\n  private calculateForChildren(\n    subroot,\n    localPositionsByKey: LocalPositionsByKey,\n    subtreeWidthsByKey: Map<any, number>,\n  ) {\n    const subrootHeight = this.getHeight(subroot);\n    const subrootWidth = this.getWidth(subroot);\n    const childrenWidth = this.calculateChildrenWidth(\n      subroot,\n      subtreeWidthsByKey\n    );\n    let nextLeftBound = subrootWidth / 2 - childrenWidth / 2;\n    for (const child of this.getChildren(subroot)) {\n      const childKey = this.getKey(child);\n      const childSubtreeWidth = subtreeWidthsByKey.get(childKey) as number;\n      const childWidth = this.getWidth(child);\n      const childX = nextLeftBound + childSubtreeWidth / 2 - childWidth / 2;\n      nextLeftBound += childSubtreeWidth + this.horizontalMargin;\n      const childY = subrootHeight + this.verticalMargin;\n      localPositionsByKey.set(childKey, {\n        left: childX,\n        top: childY,\n        key: childKey,\n      });\n      this.calculateForChildren(child, localPositionsByKey, subtreeWidthsByKey);\n    }\n  }\n\n  private calculateSubtreeWidth(subroot, subtreeWidthsByKey: Map<any, number>) {\n    if (subtreeWidthsByKey.has(this.getKey(subroot))) {\n      return;\n    }\n\n    const childrenWidth = this.calculateChildrenWidth(\n      subroot,\n      subtreeWidthsByKey\n    );\n    const key = this.getKey(subroot);\n    const width = Math.max(childrenWidth, this.getWidth(subroot));\n    subtreeWidthsByKey.set(key, width);\n  }\n\n  private calculateSubtreeHeight(subroot, subtreeHeightsByKey: Map<any, number>) {\n    if (subtreeHeightsByKey.has(this.getKey(subroot))) {\n      return;\n    }\n\n    const children = Array.from(this.getChildren(subroot));\n    if (children.length === 0) {\n      const subrootHeight = this.getHeight(subroot);\n      subtreeHeightsByKey.set(this.getKey(subroot), subrootHeight);\n      return;\n    }\n\n    let maxHeight = 0;\n    for (const child of children) {\n      this.calculateSubtreeHeight(child, subtreeHeightsByKey);\n      const childHeight = subtreeHeightsByKey.get(this.getKey(child)) as number;\n      maxHeight = Math.max(maxHeight, childHeight);\n    }\n\n    const subtreeHeight = this.getHeight(subroot) + this.verticalMargin + maxHeight;\n    subtreeHeightsByKey.set(this.getKey(subroot), subtreeHeight);\n  }\n\n  private calculateChildrenWidth(subroot, subtreeWidthsByKey): number {\n    let childrenWidth = 0;\n    const children = Array.from(this.getChildren(subroot));\n    for (const child of children) {\n      this.calculateSubtreeWidth(child, subtreeWidthsByKey);\n      const childKey = this.getKey(child);\n      childrenWidth += subtreeWidthsByKey.get(childKey) as number;\n    }\n    const gaps = Math.max(children.length - 1, 0);\n    childrenWidth += gaps * this.horizontalMargin;\n    return childrenWidth;\n  }\n\n  private calculateLinesFromParentToChildren(\n    subroot,\n    subrootWorldPosition,\n    localPositionsByKey,\n    lines\n  ) {\n    const subrootWorldCenter = {\n      x: subrootWorldPosition.left + this.getWidth(subroot) / 2,\n      y: subrootWorldPosition.top + this.getHeight(subroot) / 2,\n    };\n    const children = this.getChildren(subroot);\n    for (const child of children) {\n      const childLocalPosition = localPositionsByKey.get(this.getKey(child));\n      const childWorldPosition = {\n        left: subrootWorldPosition.left + childLocalPosition.left,\n        top: subrootWorldPosition.top + childLocalPosition.top,\n      };\n      const childWorldCenter = {\n        x: childWorldPosition.left + this.getWidth(child) / 2,\n        y: childWorldPosition.top + this.getHeight(child) / 2,\n      };\n      const line = {\n        startX: subrootWorldCenter.x,\n        startY: subrootWorldCenter.y,\n        endX: childWorldCenter.x,\n        endY: childWorldCenter.y,\n      };\n\n      lines.push(line);\n      this.calculateLinesFromParentToChildren(\n        child,\n        childWorldPosition,\n        localPositionsByKey,\n        lines\n      );\n    }\n  }\n}\n"],"mappings":";AAuBA,OAAM,MAAOA,MAAM;EACjBC,YACUC,QAAkB,EAClBC,SAAmB,EACnBC,WAAqB,EACrBC,MAAgB,EAChBC,gBAAwB,EACxBC,cAAsB;IALtB,KAAAL,QAAQ,GAARA,QAAQ;IACR,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,cAAc,GAAdA,cAAc;EACrB;EAEH;EACAC,SAASA,CAACC,QAAQ;IAChB,MAAMC,kBAAkB,GAAG,IAAIC,GAAG,EAAe;IACjD,MAAMC,mBAAmB,GAAG,IAAID,GAAG,EAAe;IAClD,IAAI,CAACE,qBAAqB,CAACJ,QAAQ,EAAEC,kBAAkB,CAAC;IACxD,IAAI,CAACI,sBAAsB,CAACL,QAAQ,EAAEG,mBAAmB,CAAC;IAE1D,MAAMG,WAAW,GAAG,IAAI,CAACV,MAAM,CAACI,QAAQ,CAAC;IAEzC,MAAMO,UAAU,GAAGN,kBAAkB,CAACO,GAAG,CAACF,WAAW,CAAW;IAChE,MAAMG,WAAW,GAAGN,mBAAmB,CAACK,GAAG,CAACF,WAAW,CAAW;IAElE,MAAMI,aAAa,GAAGH,UAAU,GAAG,CAAC,GAAG,IAAI,CAACd,QAAQ,CAACO,QAAQ,CAAC,GAAG,CAAC;IAClE,MAAMW,YAAY,GAAG,CAAC;IAEtB,MAAMC,mBAAmB,GAAG,IAAIV,GAAG,EAAc;IACjDU,mBAAmB,CAACC,GAAG,CAACP,WAAW,EAAE;MAAEQ,IAAI,EAAEJ,aAAa;MAAEK,GAAG,EAAEJ,YAAY;MAAEK,GAAG,EAAEV;IAAW,CAAE,CAAC;IAClG,IAAI,CAACW,oBAAoB,CACvBjB,QAAQ,EACRY,mBAAmB,EACnBX,kBAAkB,CACnB;IACD,MAAMiB,KAAK,GAAG,EAAE;IAIhB,IAAI,CAACC,kCAAkC,CACrCnB,QAAQ,EACR;MAAEc,IAAI,EAAEJ,aAAa;MAAEK,GAAG,EAAEJ;IAAY,CAAE,EAC1CC,mBAAmB,EACnBM,KAAK,CACN;IAED,OAAO;MACLN,mBAAmB;MACnBM,KAAK;MACLX,UAAU;MACVE;KACD;EACH;EAEA;;;EAGQQ,oBAAoBA,CAC1BG,OAAO,EACPR,mBAAwC,EACxCX,kBAAoC;IAEpC,MAAMoB,aAAa,GAAG,IAAI,CAAC3B,SAAS,CAAC0B,OAAO,CAAC;IAC7C,MAAME,YAAY,GAAG,IAAI,CAAC7B,QAAQ,CAAC2B,OAAO,CAAC;IAC3C,MAAMG,aAAa,GAAG,IAAI,CAACC,sBAAsB,CAC/CJ,OAAO,EACPnB,kBAAkB,CACnB;IACD,IAAIwB,aAAa,GAAGH,YAAY,GAAG,CAAC,GAAGC,aAAa,GAAG,CAAC;IACxD,KAAK,MAAMG,KAAK,IAAI,IAAI,CAAC/B,WAAW,CAACyB,OAAO,CAAC,EAAE;MAC7C,MAAMO,QAAQ,GAAG,IAAI,CAAC/B,MAAM,CAAC8B,KAAK,CAAC;MACnC,MAAME,iBAAiB,GAAG3B,kBAAkB,CAACO,GAAG,CAACmB,QAAQ,CAAW;MACpE,MAAME,UAAU,GAAG,IAAI,CAACpC,QAAQ,CAACiC,KAAK,CAAC;MACvC,MAAMI,MAAM,GAAGL,aAAa,GAAGG,iBAAiB,GAAG,CAAC,GAAGC,UAAU,GAAG,CAAC;MACrEJ,aAAa,IAAIG,iBAAiB,GAAG,IAAI,CAAC/B,gBAAgB;MAC1D,MAAMkC,MAAM,GAAGV,aAAa,GAAG,IAAI,CAACvB,cAAc;MAClDc,mBAAmB,CAACC,GAAG,CAACc,QAAQ,EAAE;QAChCb,IAAI,EAAEgB,MAAM;QACZf,GAAG,EAAEgB,MAAM;QACXf,GAAG,EAAEW;OACN,CAAC;MACF,IAAI,CAACV,oBAAoB,CAACS,KAAK,EAAEd,mBAAmB,EAAEX,kBAAkB,CAAC;;EAE7E;EAEQG,qBAAqBA,CAACgB,OAAO,EAAEnB,kBAAoC;IACzE,IAAIA,kBAAkB,CAAC+B,GAAG,CAAC,IAAI,CAACpC,MAAM,CAACwB,OAAO,CAAC,CAAC,EAAE;MAChD;;IAGF,MAAMG,aAAa,GAAG,IAAI,CAACC,sBAAsB,CAC/CJ,OAAO,EACPnB,kBAAkB,CACnB;IACD,MAAMe,GAAG,GAAG,IAAI,CAACpB,MAAM,CAACwB,OAAO,CAAC;IAChC,MAAMa,KAAK,GAAGC,IAAI,CAACC,GAAG,CAACZ,aAAa,EAAE,IAAI,CAAC9B,QAAQ,CAAC2B,OAAO,CAAC,CAAC;IAC7DnB,kBAAkB,CAACY,GAAG,CAACG,GAAG,EAAEiB,KAAK,CAAC;EACpC;EAEQ5B,sBAAsBA,CAACe,OAAO,EAAEjB,mBAAqC;IAC3E,IAAIA,mBAAmB,CAAC6B,GAAG,CAAC,IAAI,CAACpC,MAAM,CAACwB,OAAO,CAAC,CAAC,EAAE;MACjD;;IAGF,MAAMgB,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC3C,WAAW,CAACyB,OAAO,CAAC,CAAC;IACtD,IAAIgB,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAE;MACzB,MAAMlB,aAAa,GAAG,IAAI,CAAC3B,SAAS,CAAC0B,OAAO,CAAC;MAC7CjB,mBAAmB,CAACU,GAAG,CAAC,IAAI,CAACjB,MAAM,CAACwB,OAAO,CAAC,EAAEC,aAAa,CAAC;MAC5D;;IAGF,IAAImB,SAAS,GAAG,CAAC;IACjB,KAAK,MAAMd,KAAK,IAAIU,QAAQ,EAAE;MAC5B,IAAI,CAAC/B,sBAAsB,CAACqB,KAAK,EAAEvB,mBAAmB,CAAC;MACvD,MAAMsC,WAAW,GAAGtC,mBAAmB,CAACK,GAAG,CAAC,IAAI,CAACZ,MAAM,CAAC8B,KAAK,CAAC,CAAW;MACzEc,SAAS,GAAGN,IAAI,CAACC,GAAG,CAACK,SAAS,EAAEC,WAAW,CAAC;;IAG9C,MAAMC,aAAa,GAAG,IAAI,CAAChD,SAAS,CAAC0B,OAAO,CAAC,GAAG,IAAI,CAACtB,cAAc,GAAG0C,SAAS;IAC/ErC,mBAAmB,CAACU,GAAG,CAAC,IAAI,CAACjB,MAAM,CAACwB,OAAO,CAAC,EAAEsB,aAAa,CAAC;EAC9D;EAEQlB,sBAAsBA,CAACJ,OAAO,EAAEnB,kBAAkB;IACxD,IAAIsB,aAAa,GAAG,CAAC;IACrB,MAAMa,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC3C,WAAW,CAACyB,OAAO,CAAC,CAAC;IACtD,KAAK,MAAMM,KAAK,IAAIU,QAAQ,EAAE;MAC5B,IAAI,CAAChC,qBAAqB,CAACsB,KAAK,EAAEzB,kBAAkB,CAAC;MACrD,MAAM0B,QAAQ,GAAG,IAAI,CAAC/B,MAAM,CAAC8B,KAAK,CAAC;MACnCH,aAAa,IAAItB,kBAAkB,CAACO,GAAG,CAACmB,QAAQ,CAAW;;IAE7D,MAAMgB,IAAI,GAAGT,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7ChB,aAAa,IAAIoB,IAAI,GAAG,IAAI,CAAC9C,gBAAgB;IAC7C,OAAO0B,aAAa;EACtB;EAEQJ,kCAAkCA,CACxCC,OAAO,EACPwB,oBAAoB,EACpBhC,mBAAmB,EACnBM,KAAK;IAEL,MAAM2B,kBAAkB,GAAG;MACzBC,CAAC,EAAEF,oBAAoB,CAAC9B,IAAI,GAAG,IAAI,CAACrB,QAAQ,CAAC2B,OAAO,CAAC,GAAG,CAAC;MACzD2B,CAAC,EAAEH,oBAAoB,CAAC7B,GAAG,GAAG,IAAI,CAACrB,SAAS,CAAC0B,OAAO,CAAC,GAAG;KACzD;IACD,MAAMgB,QAAQ,GAAG,IAAI,CAACzC,WAAW,CAACyB,OAAO,CAAC;IAC1C,KAAK,MAAMM,KAAK,IAAIU,QAAQ,EAAE;MAC5B,MAAMY,kBAAkB,GAAGpC,mBAAmB,CAACJ,GAAG,CAAC,IAAI,CAACZ,MAAM,CAAC8B,KAAK,CAAC,CAAC;MACtE,MAAMuB,kBAAkB,GAAG;QACzBnC,IAAI,EAAE8B,oBAAoB,CAAC9B,IAAI,GAAGkC,kBAAkB,CAAClC,IAAI;QACzDC,GAAG,EAAE6B,oBAAoB,CAAC7B,GAAG,GAAGiC,kBAAkB,CAACjC;OACpD;MACD,MAAMmC,gBAAgB,GAAG;QACvBJ,CAAC,EAAEG,kBAAkB,CAACnC,IAAI,GAAG,IAAI,CAACrB,QAAQ,CAACiC,KAAK,CAAC,GAAG,CAAC;QACrDqB,CAAC,EAAEE,kBAAkB,CAAClC,GAAG,GAAG,IAAI,CAACrB,SAAS,CAACgC,KAAK,CAAC,GAAG;OACrD;MACD,MAAMyB,IAAI,GAAG;QACXC,MAAM,EAAEP,kBAAkB,CAACC,CAAC;QAC5BO,MAAM,EAAER,kBAAkB,CAACE,CAAC;QAC5BO,IAAI,EAAEJ,gBAAgB,CAACJ,CAAC;QACxBS,IAAI,EAAEL,gBAAgB,CAACH;OACxB;MAED7B,KAAK,CAACsC,IAAI,CAACL,IAAI,CAAC;MAChB,IAAI,CAAChC,kCAAkC,CACrCO,KAAK,EACLuB,kBAAkB,EAClBrC,mBAAmB,EACnBM,KAAK,CACN;;EAEL","ignoreList":[]}]}