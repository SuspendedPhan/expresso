{"remainingRequest":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js??ref--14-2!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/store/Root.ts","dependencies":[{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/store/Root.ts","mtime":1714946187078},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/babel.config.js","mtime":1714946187052},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js","mtime":1714947394795},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js","mtime":1714947267504},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js","mtime":1714947270651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE1ldGFmdW5TdG9yZSBmcm9tICIuL01ldGFmdW4iOwppbXBvcnQgUGVuU3RvcmUgZnJvbSAiLi9QZW4iOwppbXBvcnQgd3UgZnJvbSAid3UiOwppbXBvcnQgT3JnYW5pc21Db2xsZWN0aW9uIGZyb20gIi4vT3JnYW5pc21Db2xsZWN0aW9uIjsKaW1wb3J0IE1ldGFvcmdhbmlzbUNvbGxlY3Rpb24gZnJvbSAiLi9NZXRhb3JnYW5pc21Db2xsZWN0aW9uIjsKaW1wb3J0IFRpbWUgZnJvbSAiLi9UaW1lIjsKaW1wb3J0IFdvcmRDb2xsZWN0aW9uIGZyb20gIi4vV29yZENvbGxlY3Rpb24iOwppbXBvcnQgeyBFbGVtZW50TGF5b3V0IH0gZnJvbSAiLi4vY29kZS9FbGVtZW50TGF5b3V0IjsKaW1wb3J0IEF0dHJpYnV0ZSBmcm9tICJAL21vZGVscy9BdHRyaWJ1dGUiOwppbXBvcnQgRXZhbHVhdG9yIGZyb20gIkAvY29kZS9FdmFsdWF0b3IiOwppbXBvcnQgTm9kZSBmcm9tICJAL21vZGVscy9Ob2RlIjsKZXhwb3J0IHZhciBSZW5kZXJTaGFwZTsKKGZ1bmN0aW9uIChSZW5kZXJTaGFwZSkgewogIFJlbmRlclNoYXBlWyJDaXJjbGUiXSA9ICJDaXJjbGUiOwogIFJlbmRlclNoYXBlWyJSZWN0YW5nbGUiXSA9ICJSZWN0YW5nbGUiOwogIFJlbmRlclNoYXBlWyJMaW5lIl0gPSAiTGluZSI7CiAgUmVuZGVyU2hhcGVbIk5vbmUiXSA9ICJOb25lIjsKfSkoUmVuZGVyU2hhcGUgfHwgKFJlbmRlclNoYXBlID0ge30pKTsKZXhwb3J0IGNsYXNzIFJvb3QgewogIGNvbnN0cnVjdG9yKCkgewogICAgLy8gQ0hFQ0sgLS0gZG9lcyB5b3VyIHN0b3JlIG5lZWQgdG8gYmUgc2VyaWFsaXplZD8gQ29uc2lkZXIgdGVzdGluZyBpdCBsYXRlci4KICAgIHRoaXMud29yZENvbGxlY3Rpb24gPSBuZXcgV29yZENvbGxlY3Rpb24oKTsKICAgIHRoaXMubm9kZUNvbGxlY3Rpb24gPSBOb2RlOwogICAgdGhpcy5ub2RlU3RvcmUgPSB0aGlzLm5vZGVDb2xsZWN0aW9uOwogICAgdGhpcy5vcmdhbmlzbUxheW91dCA9IG5ldyBFbGVtZW50TGF5b3V0KCgpID0+IHRoaXMub3JnYW5pc21Db2xsZWN0aW9uLmdldFJvb3QoKSwgb3JnYW5pc20gPT4gdGhpcy5vcmdhbmlzbUNvbGxlY3Rpb24uZ2V0Q2hpbGRyZW4ob3JnYW5pc20pKTsKICAgIHRoaXMubWV0YW9yZ2FuaXNtQ29sbGVjdGlvbiA9IG5ldyBNZXRhb3JnYW5pc21Db2xsZWN0aW9uKHRoaXMpOwogICAgdGhpcy5hdHRyaWJ1dGVDb2xsZWN0aW9uID0gQXR0cmlidXRlOwogICAgLyoqIEBkZXByZWNhdGVkICovCiAgICB0aGlzLmF0dHJpYnV0ZVN0b3JlID0gdGhpcy5hdHRyaWJ1dGVDb2xsZWN0aW9uOwogICAgLyoqIEBkZXByZWNhdGVkICovCiAgICB0aGlzLm9yZ2FuaXNtU3RvcmUgPSBuZXcgT3JnYW5pc21Db2xsZWN0aW9uKHRoaXMpOwogICAgdGhpcy5vcmdhbmlzbUNvbGxlY3Rpb24gPSB0aGlzLm9yZ2FuaXNtU3RvcmU7CiAgICB0aGlzLm1ldGFmdW5TdG9yZSA9IG5ldyBNZXRhZnVuU3RvcmUodGhpcyk7CiAgICB0aGlzLnBlblN0b3JlID0gbmV3IFBlblN0b3JlKHRoaXMpOwogICAgdGhpcy5wZW4gPSB0aGlzLnBlblN0b3JlOwogICAgdGhpcy50aW1lID0gbmV3IFRpbWUodGhpcyk7CiAgICB0aGlzLndpbmRvd1NpemUgPSB7CiAgICAgIHdpZHRoOiAwLAogICAgICBoZWlnaHQ6IDAKICAgIH07CiAgICB0aGlzLm1vc3RSZWNlbnRDbGlja0Nvb3JkaW5hdGVzID0gewogICAgICB4OiAwLAogICAgICB5OiAwCiAgICB9OwogICAgLy8gaGFjawogICAgdGhpcy5hdHRyaWJ1dGVDb2xsZWN0aW9uLnJvb3RTdG9yZSA9IHRoaXM7CiAgICB0aGlzLm5vZGVDb2xsZWN0aW9uLnJvb3QgPSB0aGlzOwogIH0KICAvLyAtLS0gR0VUUyAtLS0KICBnZXRTZXJpYWxpemVkKCkgewogICAgcmV0dXJuIHsKICAgICAgb3JnYW5pc21TdG9yZTogdGhpcy5vcmdhbmlzbVN0b3JlLmdldFNlcmlhbGl6ZWQoKSwKICAgICAgYXR0cmlidXRlU3RvcmU6IHRoaXMuYXR0cmlidXRlU3RvcmUuZ2V0U2VyaWFsaXplZCgpLAogICAgICBub2RlU3RvcmU6IHRoaXMubm9kZVN0b3JlLmdldFNlcmlhbGl6ZWQoKSwKICAgICAgbWV0YWZ1blN0b3JlOiB0aGlzLm1ldGFmdW5TdG9yZS5nZXRTZXJpYWxpemVkKCksCiAgICAgIHBlblN0b3JlOiB0aGlzLnBlblN0b3JlLmdldFNlcmlhbGl6ZWQoKQogICAgfTsKICB9CiAgLy8gLS0tIEFDVElPTlMgLS0tCiAgc2V0V2luZG93U2l6ZSh3aWR0aCwgaGVpZ2h0KSB7CiAgICB0aGlzLndpbmRvd1NpemUgPSB7CiAgICAgIHdpZHRoLAogICAgICBoZWlnaHQKICAgIH07CiAgfQogIHNldE1vdXNlTG9jYXRpb24oeCwgeSkgewogICAgdGhpcy5tb3N0UmVjZW50Q2xpY2tDb29yZGluYXRlcyA9IHsKICAgICAgeCwKICAgICAgeQogICAgfTsKICB9CiAgKmNvbXB1dGVSZW5kZXJDb21tYW5kcygpIHsKICAgIHlpZWxkKiBFdmFsdWF0b3IuY29tcHV0ZVJlbmRlckNvbW1hbmRzKCk7CiAgfQogIGRlc2VyaWFsaXplKHJvb3QpIHsKICAgIHRoaXMub3JnYW5pc21TdG9yZS5kZXNlcmlhbGl6ZShyb290Lm9yZ2FuaXNtU3RvcmUpOwogICAgdGhpcy5hdHRyaWJ1dGVTdG9yZS5kZXNlcmlhbGl6ZShyb290LmF0dHJpYnV0ZVN0b3JlKTsKICAgIHRoaXMubm9kZVN0b3JlLmRlc2VyaWFsaXplKHJvb3Qubm9kZVN0b3JlKTsKICAgIHRoaXMucGVuU3RvcmUuZGVzZXJpYWxpemUocm9vdC5wZW5TdG9yZSk7CiAgfQogIHNhdmUoKSB7CiAgICBjb25zdCBzZXJpYWxpemVkID0gSlNPTi5zdHJpbmdpZnkodGhpcy5nZXRTZXJpYWxpemVkKCkpOwogICAgLy8gY29uc29sZS5sb2coc2VyaWFsaXplZCk7CiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oInNhdmUiLCBzZXJpYWxpemVkKTsKICB9CiAgbG9hZCgpIHsKICAgIC8vIHJldHVybjsKICAgIGNvbnN0IHRleHQgPSB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oInNhdmUiKTsKICAgIGlmICh0ZXh0ICE9PSBudWxsKSB7CiAgICAgIGNvbnN0IHJvb3QgPSBKU09OLnBhcnNlKHRleHQpOwogICAgICB0aGlzLmRlc2VyaWFsaXplKHJvb3QpOwogICAgfQogIH0KICBjbGVhclN0b3JhZ2UoKSB7CiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLmNsZWFyKCk7CiAgfQogIHRvVHJlZShzdWJ0cmVlID0ge30sIG9yZ2FuaXNtID0gdW5kZWZpbmVkKSB7CiAgICBpZiAoIW9yZ2FuaXNtKSB7CiAgICAgIG9yZ2FuaXNtID0gdGhpcy5vcmdhbmlzbUNvbGxlY3Rpb24ucm9vdE9yZ2FuaXNtOwogICAgfQogICAgY29uc3Qgb3JnYW5UcmVlID0ge307CiAgICBjb25zdCBtZXRhb3JnYW5pc20gPSB0aGlzLm1ldGFvcmdhbmlzbUNvbGxlY3Rpb24uZ2V0RnJvbUlkKG9yZ2FuaXNtLm1ldGFvcmdhbmlzbUlkKTsKICAgIHN1YnRyZWVbYCR7bWV0YW9yZ2FuaXNtLm5hbWV9ICR7b3JnYW5pc20ubmFtZX1gXSA9IG9yZ2FuVHJlZTsKICAgIGZvciAoY29uc3QgYXR0cmlidXRlIG9mIHRoaXMuYXR0cmlidXRlQ29sbGVjdGlvbi5nZXRFZGl0YWJsZXMob3JnYW5pc20pKSB7CiAgICAgIGNvbnN0IHJvb3ROb2RlID0gdGhpcy5hdHRyaWJ1dGVDb2xsZWN0aW9uLmdldFJvb3ROb2RlKGF0dHJpYnV0ZSk7CiAgICAgIGNvbnN0IGNoaWxkUm9vdE5vZGUgPSB0aGlzLm5vZGVTdG9yZS5nZXRDaGlsZChyb290Tm9kZSwgMCk7CiAgICAgIGNvbnN0IGtleSA9IGBlZGl0YXR0ciAke2F0dHJpYnV0ZS5uYW1lfSAke2F0dHJpYnV0ZS5kYXRhdHlwZX1gOwogICAgICBjb25zdCByb290Tm9kZVRyZWUgPSB7fTsKICAgICAgb3JnYW5UcmVlW2tleV0gPSByb290Tm9kZVRyZWU7CiAgICAgIHRoaXMubm9kZVN0b3JlLnRvVHJlZTIoY2hpbGRSb290Tm9kZSwgcm9vdE5vZGVUcmVlKTsKICAgIH0KICAgIGZvciAoY29uc3QgYXR0cmlidXRlIG9mIHRoaXMuYXR0cmlidXRlQ29sbGVjdGlvbi5nZXRFbWVyZ2VudHMob3JnYW5pc20pKSB7CiAgICAgIGNvbnN0IHJvb3ROb2RlID0gdGhpcy5hdHRyaWJ1dGVDb2xsZWN0aW9uLmdldFJvb3ROb2RlKGF0dHJpYnV0ZSk7CiAgICAgIGNvbnN0IGNoaWxkUm9vdE5vZGUgPSB0aGlzLm5vZGVTdG9yZS5nZXRDaGlsZChyb290Tm9kZSwgMCk7CiAgICAgIGNvbnN0IGtleSA9IGBlbWVyYXR0ciAke2F0dHJpYnV0ZS5uYW1lfSAke2F0dHJpYnV0ZS5kYXRhdHlwZX1gOwogICAgICBjb25zdCByb290Tm9kZVRyZWUgPSB7fTsKICAgICAgb3JnYW5UcmVlW2tleV0gPSByb290Tm9kZVRyZWU7CiAgICAgIHRoaXMubm9kZVN0b3JlLnRvVHJlZTIoY2hpbGRSb290Tm9kZSwgcm9vdE5vZGVUcmVlKTsKICAgIH0KICAgIGZvciAoY29uc3QgY2hpbGQgb2YgdGhpcy5vcmdhbmlzbUNvbGxlY3Rpb24uZ2V0Q2hpbGRyZW4ob3JnYW5pc20pKSB7CiAgICAgIHRoaXMudG9UcmVlKG9yZ2FuVHJlZSwgY2hpbGQpOwogICAgfQogICAgcmV0dXJuIHN1YnRyZWU7CiAgfQogIGZyb21UcmVlKHN1YnRyZWUsIHN1cGVyb3JnYW5pc20gPSB1bmRlZmluZWQpIHsKICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHd1LmVudHJpZXMoc3VidHJlZSkpIHsKICAgICAgY29uc3Qgc3BsaXRzID0ga2V5LnNwbGl0KCIgIik7CiAgICAgIGNvbnN0IGF0dHJpYnV0ZVR5cGUgPSBzcGxpdHNbMF07CiAgICAgIGlmIChhdHRyaWJ1dGVUeXBlID09PSAiZWRpdGF0dHIiKSB7CiAgICAgICAgLy8gYnJva2VuPwogICAgICAgIC8vIGNvbnN0IHR5cGUgPSBzcGxpdHNbMl0gYXMgVHlwZXM7CiAgICAgICAgY29uc3QgdHlwZSA9IHNwbGl0c1syXTsKICAgICAgICBjb25zdCBhdHRyaWJ1dGUgPSB0aGlzLmF0dHJpYnV0ZUNvbGxlY3Rpb24ucHV0RWRpdGFibGUoc3VwZXJvcmdhbmlzbSwgc3BsaXRzWzFdLCB0eXBlKTsKICAgICAgICBjb25zdCByb290Tm9kZSA9IHRoaXMuYXR0cmlidXRlQ29sbGVjdGlvbi5nZXRSb290Tm9kZShhdHRyaWJ1dGUpOwogICAgICAgIHRoaXMubm9kZVN0b3JlLmZyb21UcmVlKHZhbHVlLCByb290Tm9kZSk7CiAgICAgIH0gZWxzZSBpZiAoYXR0cmlidXRlVHlwZSA9PT0gImVtZXJhdHRyIikgewogICAgICAgIHRoaXMuYXR0cmlidXRlQ29sbGVjdGlvbi5wdXRFbWVyZ2VudChzdXBlcm9yZ2FuaXNtLCBzcGxpdHNbMV0pOwogICAgICB9IGVsc2UgewogICAgICAgIGxldCBvcmdhbmlzbTsKICAgICAgICBjb25zdCBtZXRhb3JnYW5pc20gPSB0aGlzLm1ldGFvcmdhbmlzbUNvbGxlY3Rpb24uZ2V0RnJvbU5hbWUoYXR0cmlidXRlVHlwZSk7CiAgICAgICAgaWYgKCFzdXBlcm9yZ2FuaXNtKSB7CiAgICAgICAgICB0aGlzLm9yZ2FuaXNtQ29sbGVjdGlvbi5yb290T3JnYW5pc20gPSB0aGlzLm9yZ2FuaXNtQ29sbGVjdGlvbi5wdXRGcm9tTWV0YVdpdGhvdXRBdHRyaWJ1dGVzKCJyb290IiwgbWV0YW9yZ2FuaXNtKTsKICAgICAgICAgIG9yZ2FuaXNtID0gdGhpcy5vcmdhbmlzbUNvbGxlY3Rpb24ucm9vdE9yZ2FuaXNtOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBvcmdhbmlzbSA9IHRoaXMub3JnYW5pc21Db2xsZWN0aW9uLnB1dEZyb21NZXRhV2l0aG91dEF0dHJpYnV0ZXMoc3BsaXRzWzFdLCBtZXRhb3JnYW5pc20pOwogICAgICAgICAgdGhpcy5vcmdhbmlzbUNvbGxlY3Rpb24uYWRkQ2hpbGQoc3VwZXJvcmdhbmlzbSwgb3JnYW5pc20pOwogICAgICAgIH0KICAgICAgICB0aGlzLmZyb21UcmVlKHZhbHVlLCBvcmdhbmlzbSk7CiAgICAgIH0KICAgIH0KICAgIHJldHVybiB0aGlzOwogIH0KICB0b1RyZWVKc29uKCkgewogICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRoaXMudG9UcmVlKCksIG51bGwsIDIpOwogIH0KfQpleHBvcnQgZGVmYXVsdCBuZXcgUm9vdCgpOw=="},{"version":3,"names":["MetafunStore","PenStore","wu","OrganismCollection","MetaorganismCollection","Time","WordCollection","ElementLayout","Attribute","Evaluator","Node","RenderShape","Root","constructor","wordCollection","nodeCollection","nodeStore","organismLayout","organismCollection","getRoot","organism","getChildren","metaorganismCollection","attributeCollection","attributeStore","organismStore","metafunStore","penStore","pen","time","windowSize","width","height","mostRecentClickCoordinates","x","y","rootStore","root","getSerialized","setWindowSize","setMouseLocation","computeRenderCommands","deserialize","save","serialized","JSON","stringify","window","localStorage","setItem","load","text","getItem","parse","clearStorage","clear","toTree","subtree","undefined","rootOrganism","organTree","metaorganism","getFromId","metaorganismId","name","attribute","getEditables","rootNode","getRootNode","childRootNode","getChild","key","datatype","rootNodeTree","toTree2","getEmergents","child","fromTree","superorganism","value","entries","splits","split","attributeType","type","putEditable","putEmergent","getFromName","putFromMetaWithoutAttributes","addChild","toTreeJson"],"sources":["/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/store/Root.ts"],"sourcesContent":["import MetafunStore from \"./Metafun\";\nimport PenStore from \"./Pen\";\nimport wu from \"wu\";\nimport OrganismCollection, {Organism} from \"./OrganismCollection\";\nimport MetaorganismCollection from \"./MetaorganismCollection\";\nimport Time from \"./Time\";\nimport {DateTime} from \"luxon\";\nimport WordCollection from \"./WordCollection\";\nimport Types from \"./Types\";\nimport {ElementLayout} from \"../code/ElementLayout\";\nimport Attribute from \"@/models/Attribute\";\nimport Evaluator from \"@/code/Evaluator\";\nimport Node from \"@/models/Node\";\n\nexport enum RenderShape {\n  Circle = \"Circle\",\n  Rectangle = \"Rectangle\",\n  Line = \"Line\",\n  None = \"None\",\n}\n\nexport class Root {\n  // CHECK -- does your store need to be serialized? Consider testing it later.\n  wordCollection = new WordCollection();\n  nodeCollection = Node;\n  nodeStore = this.nodeCollection;\n  organismLayout = new ElementLayout(() => this.organismCollection.getRoot(), (organism) => this.organismCollection.getChildren(organism));\n\n  metaorganismCollection = new MetaorganismCollection(this);\n\n  attributeCollection = Attribute;\n  /** @deprecated */\n  attributeStore = this.attributeCollection;\n\n  /** @deprecated */\n  organismStore = new OrganismCollection(this);\n\n  organismCollection = this.organismStore;\n  metafunStore = new MetafunStore(this);\n  penStore = new PenStore(this);\n  pen = this.penStore;\n  time = new Time(this);\n  windowSize = {width: 0, height: 0};\n  mostRecentClickCoordinates = {x: 0, y: 0}\n\n  constructor() {\n    // hack\n    this.attributeCollection.rootStore = this;\n    this.nodeCollection.root = this;\n  }\n\n  // --- GETS ---\n\n  getSerialized() {\n    return {\n      organismStore: this.organismStore.getSerialized(),\n      attributeStore: this.attributeStore.getSerialized(),\n      nodeStore: this.nodeStore.getSerialized(),\n      metafunStore: this.metafunStore.getSerialized(),\n      penStore: this.penStore.getSerialized(),\n    };\n  }\n\n  // --- ACTIONS ---\n\n  setWindowSize(width: number, height: number) {\n    this.windowSize = {width, height};\n  }\n\n  setMouseLocation(x: number, y: number) {\n    this.mostRecentClickCoordinates = {x, y};\n  }\n\n  * computeRenderCommands(): Iterable<any> {\n    yield* Evaluator.computeRenderCommands();\n  }\n\n  deserialize(root) {\n    this.organismStore.deserialize(root.organismStore);\n    this.attributeStore.deserialize(root.attributeStore);\n    this.nodeStore.deserialize(root.nodeStore);\n    this.penStore.deserialize(root.penStore);\n  }\n\n  save() {\n    const serialized = JSON.stringify(this.getSerialized());\n    // console.log(serialized);\n    window.localStorage.setItem(\"save\", serialized);\n  }\n\n  load() {\n    // return;\n    const text = window.localStorage.getItem(\"save\");\n    if (text !== null) {\n      const root = JSON.parse(text);\n      this.deserialize(root);\n    }\n  }\n\n  clearStorage() {\n    window.localStorage.clear();\n  }\n\n  toTree(subtree = {}, organism = undefined as any) {\n    if (!organism) {\n      organism = this.organismCollection.rootOrganism;\n    }\n\n    const organTree = {};\n    const metaorganism = this.metaorganismCollection.getFromId(\n        organism.metaorganismId\n    );\n    subtree[`${metaorganism.name} ${organism.name}`] = organTree;\n\n    for (const attribute of this.attributeCollection.getEditables(organism)) {\n      const rootNode = this.attributeCollection.getRootNode(attribute);\n      const childRootNode = this.nodeStore.getChild(rootNode, 0);\n      const key = `editattr ${attribute.name} ${attribute.datatype}`;\n      const rootNodeTree = {};\n      organTree[key] = rootNodeTree;\n      this.nodeStore.toTree2(childRootNode, rootNodeTree);\n    }\n    for (const attribute of this.attributeCollection.getEmergents(organism)) {\n      const rootNode = this.attributeCollection.getRootNode(attribute);\n      const childRootNode = this.nodeStore.getChild(rootNode, 0);\n      const key = `emerattr ${attribute.name} ${attribute.datatype}`;\n      const rootNodeTree = {};\n      organTree[key] = rootNodeTree;\n      this.nodeStore.toTree2(childRootNode, rootNodeTree);\n    }\n\n    for (const child of this.organismCollection.getChildren(organism)) {\n      this.toTree(organTree, child);\n    }\n    return subtree;\n  }\n\n  fromTree(subtree, superorganism = undefined as any) {\n    for (const [key, value] of wu.entries(subtree)) {\n      const splits = key.split(\" \");\n      const attributeType = splits[0];\n      if (attributeType === \"editattr\") {\n        // broken?\n        // const type = splits[2] as Types;\n        const type = splits[2] as any;\n\n        const attribute = this.attributeCollection.putEditable(\n            superorganism,\n            splits[1],\n            type\n        );\n        const rootNode = this.attributeCollection.getRootNode(attribute);\n        this.nodeStore.fromTree(value, rootNode);\n      } else if (attributeType === \"emerattr\") {\n        this.attributeCollection.putEmergent(superorganism, splits[1]);\n      } else {\n        let organism;\n        const metaorganism = this.metaorganismCollection.getFromName(\n            attributeType\n        );\n        if (!superorganism) {\n          this.organismCollection.rootOrganism = this.organismCollection.putFromMetaWithoutAttributes(\n              \"root\",\n              metaorganism\n          );\n          organism = this.organismCollection.rootOrganism;\n        } else {\n          organism = this.organismCollection.putFromMetaWithoutAttributes(\n              splits[1],\n              metaorganism\n          );\n          this.organismCollection.addChild(superorganism, organism);\n        }\n        this.fromTree(value, organism);\n      }\n    }\n    return this;\n  }\n\n  toTreeJson() {\n    return JSON.stringify(this.toTree(), null, 2);\n  }\n}\n\nexport default new Root();\n"],"mappings":"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","ignoreList":[]}]}