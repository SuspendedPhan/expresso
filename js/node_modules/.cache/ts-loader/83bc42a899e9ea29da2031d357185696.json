{"remainingRequest":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js??ref--14-2!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/models/Attribute.ts","dependencies":[{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/models/Attribute.ts","mtime":1714946187075},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/babel.config.js","mtime":1714946187052},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js","mtime":1714947394795},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/ts-loader/index.js","mtime":1714947267504},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js","mtime":1714947270651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["wu","v4","uuidv4","Root","Functions","Type","Primitive","SignalDispatcher","Metastruct","Node","Attribute","constructor","storetype","id","datatype","fromId","datatypeId","value","nodeStore","rootStore","getRootNode","getOrganism","getOrganismForAttribute","inlineWithDefaults","nodeCollection","rootNode","nodes","filter","node","metaname","targetNodeId","toArray","Number","replaceNode","addNumber","addStruct","console","assert","remove","onSomeAttributeChanged","dispatch","getSerialized","pluck","getParent","attribute","answer","attributeParents","find","row","childAttributeId","rootNodes","attributeId","getFromId","rootNodeId","getAttributesForOrganism","organism","parentOrganismId","map","attr","attributes","getEditables","attributeType","getEmergents","getRootNodeFromName","attributeName","shouldAssert","getAttributeFromName","undefined","name","getAttributeFromId","getAttributeForNode","root","parent","organismStore","getOrganismFromId","getEvaled","eval","isRootNode","has","deserialize","store","Object","assign","storeAttribute","push","assignNumber","putChild","valueNode","putEditable","isFrozen","putAttribute","putEmergent","addVariable","onAttributeCountChanged","reject","t","assignVector","x","y","vector","getChild"],"sources":["/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/eslint-loader/index.js??ref--13-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/models/Attribute.ts"],"sourcesContent":["import wu from \"wu\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Root from \"../store/Root\";\nimport Functions from \"../code/Functions\";\nimport Type, {Primitive} from \"./Type\";\nimport { SignalDispatcher } from \"ste-signals\";\nimport Metastruct from \"@/models/Metastruct\";\nimport Node from \"@/models/Node\";\n\n/**\n *\n * @param {RootStore} rootStore\n */\nexport default class Attribute {\n  public name!: string;\n  public attributeType!: any;\n  public datatypeId!: string;\n  public storetype = \"Attribute\";\n  public id = uuidv4();\n  public isFrozen!: boolean;\n\n  public get datatype() { return Type.fromId(this.datatypeId); }\n  public set datatype(value) { this.datatypeId = value.id; }\n\n  public static attributes = [] as Array<Attribute>;\n\n  /** { childAttributeId, parentOrganismId } */\n  public static attributeParents = [] as Array<any>;\n\n  /** { attributeId, rootNodeId } */\n  public static rootNodes = [] as Array<any>;\n\n  public static rootStore = Root;\n\n  public static onAttributeCountChanged = new SignalDispatcher();\n  public static onSomeAttributeChanged = new SignalDispatcher();\n\n  private static get nodeStore() {\n    return this.rootStore.nodeStore;\n  }\n\n  // private constructor() {}\n\n  getRootNode() {\n    return Attribute.getRootNode(this);\n  }\n\n  getOrganism() {\n    return Attribute.getOrganismForAttribute(this);\n  }\n\n  inlineWithDefaults() {\n    const Node = Attribute.rootStore.nodeCollection;\n    const rootNode = this.getRootNode();\n    const nodes = wu(Node.nodes).filter(\n      (node) =>\n        node.metaname === \"Reference\" && node.targetNodeId === rootNode.id\n    ).toArray();\n\n    for (const node of nodes) {\n      if (this.datatype.id === Primitive.Number.id) {\n        Node.replaceNode(node, Node.addNumber(0));\n      } else if (this.datatype instanceof Metastruct) {\n        Node.replaceNode(node, Node.addStruct(this.datatype));\n      } else {\n        console.assert(false);\n      }\n    }\n\n    Attribute.remove(this);\n    Attribute.onSomeAttributeChanged.dispatch();\n  }\n\n  // --- GETS ---\n\n  static getSerialized() {\n    return Functions.pluck(this, [\n      \"attributes\",\n      \"attributeParents\",\n      \"rootNodes\",\n    ]);\n  }\n\n  static getParent(attribute) {\n    const answer = wu(this.attributeParents).find(\n      (row) => row.childAttributeId === attribute\n    );\n    console.assert(answer, \"prop has no parent organism\");\n    return answer;\n  }\n\n  static getRootNode(attribute): any {\n    const row = wu(this.rootNodes).find(\n      (row) => row.attributeId === attribute.id\n    );\n    console.assert(row, \"has root node\");\n\n    return this.rootStore.nodeStore.getFromId(row.rootNodeId);\n  }\n\n  static getAttributesForOrganism(organism): wu.WuIterable<Attribute> {\n    console.assert(organism);\n    let answer = wu(this.attributeParents).filter(\n      (row) => row.parentOrganismId === organism.id\n    );\n\n    answer = answer.map((row) => {\n      const attr = this.attributes.find(\n        (attr) => attr.id === row.childAttributeId\n      );\n      console.assert(attr as any);\n      return attr;\n    });\n    return answer;\n  }\n\n  static getEditables(organism) {\n    let answer = wu(this.getAttributesForOrganism(organism));\n    answer = answer.filter((row) => row.attributeType === \"Editable\");\n    return answer;\n  }\n\n  static getEmergents(organism) {\n    return wu(this.getAttributesForOrganism(organism)).filter(\n      (row) => row.attributeType === \"Emergent\"\n    );\n  }\n\n  static getRootNodeFromName(organism, attributeName, shouldAssert = true) {\n    const attribute = this.getAttributeFromName(organism, attributeName);\n    if (attribute === undefined) {\n      if (shouldAssert ?? true) {\n        console.assert(attribute, `couldn't find ${attributeName}`);\n      }\n      return undefined;\n    }\n    return this.getRootNode(attribute);\n  }\n\n  static getAttributeFromName(organism, attributeName) {\n    const attributes = this.getAttributesForOrganism(organism);\n    const attribute = attributes.find((attr) => attr.name === attributeName);\n    return attribute;\n  }\n\n  static getAttributeFromId(attributeId) {\n    return this.attributes.find((row) => row.id === attributeId);\n  }\n\n  static getAttributeForNode(node): Attribute {\n    let root = node;\n    while (true) {\n      const parent = this.nodeStore.getParent(root, false);\n      if (parent === undefined) break;\n      root = parent;\n    }\n    const row = this.rootNodes.find((row) => row.rootNodeId === root.id);\n    console.assert(row, \"no attribute for root node\");\n    const attribute = this.getAttributeFromId(row.attributeId);\n    return attribute as any;\n  }\n\n  static getOrganismForAttribute(attribute) {\n    const row = wu(this.attributeParents).find(\n      (row) => row.childAttributeId === attribute.id\n    );\n    console.assert(row);\n    const organism = this.rootStore.organismStore.getOrganismFromId(\n      row.parentOrganismId\n    );\n    console.assert(organism !== undefined);\n    return organism;\n  }\n\n  static getEvaled(attribute) {\n    return this.getRootNode(attribute).eval();\n  }\n\n  static isRootNode(node) {\n    const answer = wu(this.rootNodes)\n      .map((row) => row.rootNodeId)\n      .has(node.id);\n    return answer;\n  }\n\n  // --- ACTIONS ---\n\n  static deserialize(store) {\n    Object.assign(this, store);\n\n    this.attributes = [];\n    for (const storeAttribute of store.attributes) {\n      const attribute = new Attribute();\n      Object.assign(attribute, storeAttribute);\n      this.attributes.push(attribute);\n    }\n  }\n\n  static assignNumber(attribute, value) {\n    this.nodeStore.putChild(\n      this.getRootNode(attribute),\n      0,\n      this.nodeStore.addNumber(value)\n    );\n  }\n\n  static assign(attribute, valueNode) {\n    this.nodeStore.putChild(this.getRootNode(attribute), 0, valueNode);\n  }\n\n  static putEditable(\n    organism,\n    attributeName,\n    datatype = Primitive.Number,\n    isFrozen = false\n  ) {\n    return this.putAttribute(\n      organism,\n      attributeName,\n      \"Editable\",\n      datatype,\n      isFrozen\n    );\n  }\n\n  static putEmergent(organism, attributeName, datatype = Primitive.Number as Type) {\n    return this.putAttribute(organism, attributeName, \"Emergent\", datatype);\n  }\n\n  static putAttribute(\n    organism,\n    attributeName,\n    attributeType,\n    datatype = Primitive.Number as Type,\n    isFrozen = false\n  ) {\n    const answer = new Attribute();\n    answer.name = attributeName;\n    answer.attributeType = attributeType;\n    answer.datatypeId = datatype.id;\n    answer.isFrozen = isFrozen;\n    const rootNode = this.nodeStore.addVariable(datatype);\n    this.attributes.push(answer);\n    this.attributeParents.push({\n      childAttributeId: answer.id,\n      parentOrganismId: organism.id,\n    });\n    this.rootNodes.push({\n      attributeId: answer.id,\n      rootNodeId: rootNode.id,\n    });\n\n    // NOTE: can make this faster by dispatching per organism\n    this.onAttributeCountChanged.dispatch();\n    return answer;\n  }\n\n  static remove(attribute) {\n    const rootNode = this.getRootNode(attribute);\n    this.rootStore.nodeStore.remove(rootNode, false);\n\n    this.attributes = wu(this.attributes)\n      .reject((t) => t.id === attribute.id)\n      .toArray();\n    this.attributeParents = wu(this.attributeParents)\n      .reject((t) => t.childAttributeId === attribute.id)\n      .toArray();\n    this.rootNodes = wu(this.rootNodes)\n      .reject((t) => t.attributeId === attribute.id)\n      .toArray();\n\n    this.onAttributeCountChanged.dispatch();\n  }\n\n  public assignVector(x: number, y: number) {\n    const rootNode = Attribute.getRootNode(this);\n    const vector = Node.getChild(rootNode, 0);\n    Node.putChild(vector, 0, Node.addNumber(x));\n    Node.putChild(vector, 1, Node.addNumber(y));\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}