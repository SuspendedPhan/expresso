{"remainingRequest":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/components/Expressor.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/src/components/Expressor.vue","mtime":1714946187070},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/babel.config.js","mtime":1714946187052},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/babel-loader/lib/index.js","mtime":1714947394795},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/cache-loader/dist/cjs.js","mtime":1714947270264},{"path":"/Users/dylan.phan/stuff/expr-explorations/expresso/js/node_modules/vue-loader/lib/index.js","mtime":1714947393584}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvZHlsYW4ucGhhbi9zdHVmZi9leHByLWV4cGxvcmF0aW9ucy9leHByZXNzby9qcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanMiOwp2YXIgX2RlYywgX2NsYXNzOwppbXBvcnQgeyBQZW5Qb3NpdGlvblJlbGF0aW9uIH0gZnJvbSAiQC9zdG9yZS9QZW4iOwppbXBvcnQgd3UgZnJvbSAid3UiOwppbXBvcnQgUm9vdCBmcm9tICIuLi9zdG9yZS9Sb290IjsKaW1wb3J0IE5vZGUgZnJvbSAiLi9Ob2RlIjsKaW1wb3J0IE9yZ2FuaXNtIGZyb20gIi4vT3JnYW5pc20iOwppbXBvcnQgVnVlIGZyb20gInZ1ZSI7CmltcG9ydCBwYW56b29tIGZyb20gInBhbnpvb20iOwppbXBvcnQgQ29tcG9uZW50IGZyb20gInZ1ZS1jbGFzcy1jb21wb25lbnQiOwppbXBvcnQgeyBQcm9wIH0gZnJvbSAidnVlLXByb3BlcnR5LWRlY29yYXRvciI7CmltcG9ydCBSZXNpemVTZW5zb3IgZnJvbSAiY3NzLWVsZW1lbnQtcXVlcmllcy9zcmMvUmVzaXplU2Vuc29yIjsKbGV0IEV4cHJlc3NvciA9IChfZGVjID0gQ29tcG9uZW50KHsKICBjb21wb25lbnRzOiB7CiAgICAvLyBOb2RlLAogICAgT3JnYW5pc20KICB9Cn0pLCBfZGVjKF9jbGFzcyA9IGNsYXNzIEV4cHJlc3NvciBleHRlbmRzIFZ1ZSB7CiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoLi4uYXJncyk7CiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgInJvb3QiLCBSb290KTsKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiYXR0cmlidXRlU3RvcmUiLCBSb290LmF0dHJpYnV0ZVN0b3JlKTsKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAibWV0YW9yZ2FuaXNtQ29sbGVjdGlvbiIsIFJvb3QubWV0YW9yZ2FuaXNtQ29sbGVjdGlvbik7CiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgInNlbGVjdGVkUHJpbWl0aXZlSWQiLCBSb290Lm1ldGFvcmdhbmlzbUNvbGxlY3Rpb24uZ2V0TWV0YW9yZ2FuaXNtcygpWzBdLmlkKTsKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiY29uc29sZUVycm9yIiwgZmFsc2UpOwogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJjYW52YXNXaWR0aCIsIDApOwogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJjYW52YXNIZWlnaHQiLCAwKTsKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAicGFuem9vbVRyYW5zZm9ybSIsIHt9KTsKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAibGluZXMiLCBbXSk7CiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImJveCIsIHsKICAgICAgd2lkdGg6IDAsCiAgICAgIGhlaWdodDogMAogICAgfSk7CiAgfQogIGdldCBib3hTdHlsZSgpIHsKICAgIGNvbnNvbGUubG9nKCJnZXQgc3R5bGUiKTsKICAgIGNvbnNvbGUubG9nKHRoaXMuYm94LndpZHRoKTsKICAgIHJldHVybiBgbGVmdDogMHB4OyB3aWR0aDogJHt0aGlzLmJveC53aWR0aH1weDsgaGVpZ2h0OiAke3RoaXMuYm94LmhlaWdodH1weGA7CiAgfQogIGdldE5vZGVGb3JBdHRyaWJ1dGUoYXR0cmlidXRlKSB7CiAgICByZXR1cm4gUm9vdC5ub2RlU3RvcmUuZ2V0Q2hpbGQoUm9vdC5hdHRyaWJ1dGVTdG9yZS5nZXRSb290Tm9kZShhdHRyaWJ1dGUpLCAwKTsKICB9CiAgc3Bhd24oKSB7CiAgICBjb25zdCBtZXRhb3JnYW5pc20gPSB0aGlzLm1ldGFvcmdhbmlzbUNvbGxlY3Rpb24uZ2V0RnJvbUlkKHRoaXMuc2VsZWN0ZWRQcmltaXRpdmVJZCk7CiAgICB0aGlzLnJvb3Qub3JnYW5pc21Db2xsZWN0aW9uLnB1dEZyb21NZXRhKHVuZGVmaW5lZCwgbWV0YW9yZ2FuaXNtKTsKICAgIHRoaXMucm9vdC5zYXZlKCk7CiAgfQogIGNsZWFyU3RvcmFnZSgpIHsKICAgIHRoaXMucm9vdC5jbGVhclN0b3JhZ2UoKTsKICB9CiAgcmVtb3ZlT3JnYW5pc20ob3JnYW5pc20pIHsKICAgIHRoaXMucm9vdC5vcmdhbmlzbUNvbGxlY3Rpb24ucmVtb3ZlKG9yZ2FuaXNtKTsKICAgIHRoaXMucm9vdC5zYXZlKCk7CiAgfQogIGRyYXdMaW5lcygpIHsKICAgIGNvbnN0IGNvbnRleHQgPSB0aGlzLiRyZWZzWyJjYW52YXMiXS5nZXRDb250ZXh0KCIyZCIpOwogICAgY29udGV4dC5yZXNldFRyYW5zZm9ybSgpOwogICAgY29udGV4dC5jbGVhclJlY3QoMCwgMCwgdGhpcy5jYW52YXNXaWR0aCwgdGhpcy5jYW52YXNIZWlnaHQpOwogICAgY29uc3QgdHJhbnNmb3JtID0gdGhpcy5wYW56b29tVHJhbnNmb3JtOwogICAgY29udGV4dC5zZXRUcmFuc2Zvcm0odHJhbnNmb3JtLnNjYWxlLCAwLCAwLCB0cmFuc2Zvcm0uc2NhbGUsIHRyYW5zZm9ybS54LCB0cmFuc2Zvcm0ueSk7CiAgICBjb250ZXh0LnN0cm9rZVN0eWxlID0gImdyYXkiOwogICAgZm9yIChjb25zdCBsaW5lIG9mIHRoaXMubGluZXMpIHsKICAgICAgY29udGV4dC5iZWdpblBhdGgoKTsKICAgICAgY29udGV4dC5tb3ZlVG8obGluZS5zdGFydFgsIGxpbmUuc3RhcnRZKTsKICAgICAgY29udGV4dC5saW5lVG8obGluZS5lbmRYLCBsaW5lLmVuZFkpOwogICAgICBjb250ZXh0LnN0cm9rZSgpOwogICAgfQogIH0KICBtb3VudGVkKCkgewogICAgY29uc3QgcHogPSBwYW56b29tKHRoaXMuJHJlZnNbInBhbnpvb20iXSwgewogICAgICBiZWZvcmVNb3VzZURvd246IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgdmFyIHNob3VsZElnbm9yZSA9ICFlLmFsdEtleTsKICAgICAgICByZXR1cm4gc2hvdWxkSWdub3JlOwogICAgICB9LAogICAgICBmaWx0ZXJLZXk6IGZ1bmN0aW9uIC8qIGUsIGR4LCBkeSwgZHogKi8KICAgICAgKCkgewogICAgICAgIC8vIGRvbid0IGxldCBwYW56b29tIGhhbmRsZSB0aGlzIGV2ZW50OgogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9LAogICAgICB6b29tRG91YmxlQ2xpY2tTcGVlZDogMQogICAgfSk7CiAgICBwei5vbigidHJhbnNmb3JtIiwgZSA9PiB7CiAgICAgIHRoaXMucGFuem9vbVRyYW5zZm9ybSA9IHB6LmdldFRyYW5zZm9ybSgpOwogICAgICB0aGlzLmRyYXdMaW5lcygpOwogICAgfSk7CgogICAgLy8gTk9URTogbWF5YmUgY2FuIHJlbW92ZT8KICAgIHRoaXMuY2FudmFzV2lkdGggPSB0aGlzLiRyZWZzWyJleHByZXNzb3IiXS5jbGllbnRXaWR0aDsKICAgIHRoaXMuY2FudmFzSGVpZ2h0ID0gdGhpcy4kcmVmc1siZXhwcmVzc29yIl0uY2xpZW50SGVpZ2h0OwogICAgbmV3IFJlc2l6ZVNlbnNvcih0aGlzLiRyZWZzWyJleHByZXNzb3IiXSwgKCkgPT4gewogICAgICB0aGlzLmNhbnZhc1dpZHRoID0gdGhpcy4kcmVmc1siZXhwcmVzc29yIl0uY2xpZW50V2lkdGg7CiAgICAgIHRoaXMuY2FudmFzSGVpZ2h0ID0gdGhpcy4kcmVmc1siZXhwcmVzc29yIl0uY2xpZW50SGVpZ2h0OwogICAgfSk7CiAgICB0aGlzLnJvb3Qub3JnYW5pc21MYXlvdXQub25DYWxjdWxhdGVkLnN1YnNjcmliZShvdXRwdXQgPT4gewogICAgICB0aGlzLmxpbmVzID0gb3V0cHV0LmxpbmVzOwogICAgICB0aGlzLmJveC53aWR0aCA9IG91dHB1dC50b3RhbFdpZHRoOwogICAgICB0aGlzLmJveC5oZWlnaHQgPSBvdXRwdXQudG90YWxIZWlnaHQ7CiAgICAgIHRoaXMuZHJhd0xpbmVzKCk7CiAgICB9KTsKICB9Cn0pIHx8IF9jbGFzcyk7CmV4cG9ydCB7IEV4cHJlc3NvciBhcyBkZWZhdWx0IH07"},{"version":3,"names":["PenPositionRelation","wu","Root","Node","Organism","Vue","panzoom","Component","Prop","ResizeSensor","Expressor","_dec","components","_class","constructor","args","_defineProperty","attributeStore","metaorganismCollection","getMetaorganisms","id","width","height","boxStyle","console","log","box","getNodeForAttribute","attribute","nodeStore","getChild","getRootNode","spawn","metaorganism","getFromId","selectedPrimitiveId","root","organismCollection","putFromMeta","undefined","save","clearStorage","removeOrganism","organism","remove","drawLines","context","$refs","getContext","resetTransform","clearRect","canvasWidth","canvasHeight","transform","panzoomTransform","setTransform","scale","x","y","strokeStyle","line","lines","beginPath","moveTo","startX","startY","lineTo","endX","endY","stroke","mounted","pz","beforeMouseDown","e","shouldIgnore","altKey","filterKey","zoomDoubleClickSpeed","on","getTransform","clientWidth","clientHeight","organismLayout","onCalculated","subscribe","output","totalWidth","totalHeight","default"],"sources":["src/components/Expressor.vue"],"sourcesContent":["<template>\n  <div class=\"expressor\" ref=\"expressor\">\n    <canvas\n      ref=\"canvas\"\n      type=\"2d\"\n      :width=\"canvasWidth\"\n      :height=\"canvasHeight\"\n      class=\"canvas\"\n    ></canvas>\n    <div ref=\"panzoom\">\n      <Organism :organism=\"root.organismCollection.getRoot()\" :isRoot=\"true\" />\n      <div class=\"absolute border-solid border-2\" :style=\"boxStyle\"></div>\n      <div class=\"bottom-group\">\n        <button @click=\"clearStorage\" class=\"clearStorage\">\n          Clear storage\n        </button>\n        <div :class=\"['error-box', { error: consoleError }]\">\n          you have console errors\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { PenPositionRelation } from \"@/store/Pen\";\nimport wu from \"wu\";\nimport Root from \"../store/Root\";\nimport Node from \"./Node\";\nimport Organism from \"./Organism\";\nimport Vue from \"vue\";\nimport panzoom from \"panzoom\";\nimport Component from \"vue-class-component\";\nimport { Prop } from \"vue-property-decorator\";\nimport ResizeSensor from \"css-element-queries/src/ResizeSensor\";\n\n@Component({\n  components: {\n    // Node,\n    Organism,\n  },\n})\nexport default class Expressor extends Vue {\n  root = Root;\n  attributeStore = Root.attributeStore;\n  metaorganismCollection = Root.metaorganismCollection;\n  selectedPrimitiveId = Root.metaorganismCollection.getMetaorganisms()[0].id;\n  consoleError = false;\n  canvasWidth = 0;\n  canvasHeight = 0;\n  panzoomTransform = {};\n  lines = [];\n\n  box = {\n    width: 0,\n    height: 0\n  }\n\n  get boxStyle() {\n    console.log(\"get style\");\n    console.log(this.box.width);\n    return `left: 0px; width: ${this.box.width}px; height: ${this.box.height}px`;\n  }\n\n  getNodeForAttribute(attribute) {\n    return Root.nodeStore.getChild(\n      Root.attributeStore.getRootNode(attribute),\n      0\n    );\n  }\n\n  spawn() {\n    const metaorganism = this.metaorganismCollection.getFromId(\n      this.selectedPrimitiveId\n    );\n    this.root.organismCollection.putFromMeta(undefined, metaorganism);\n    this.root.save();\n  }\n\n  clearStorage() {\n    this.root.clearStorage();\n  }\n\n  removeOrganism(organism) {\n    this.root.organismCollection.remove(organism);\n    this.root.save();\n  }\n\n  drawLines() {\n    const context = this.$refs[\"canvas\"].getContext(\"2d\");\n    context.resetTransform();\n    context.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n    const transform = this.panzoomTransform;\n    context.setTransform(\n      transform.scale,\n      0,\n      0,\n      transform.scale,\n      transform.x,\n      transform.y\n    );\n    context.strokeStyle = \"gray\";\n    for (const line of this.lines) {\n      context.beginPath();\n      context.moveTo(line.startX, line.startY);\n      context.lineTo(line.endX, line.endY);\n      context.stroke();\n    }\n  }\n\n  mounted() {\n    const pz = panzoom(this.$refs[\"panzoom\"], {\n      beforeMouseDown: function (e) {\n        var shouldIgnore = !e.altKey;\n        return shouldIgnore;\n      },\n      filterKey: function (/* e, dx, dy, dz */) {\n        // don't let panzoom handle this event:\n        return true;\n      },\n      zoomDoubleClickSpeed: 1,\n    });\n    pz.on(\"transform\", (e) => {\n      this.panzoomTransform = pz.getTransform();\n      this.drawLines();\n    });\n\n    // NOTE: maybe can remove?\n    this.canvasWidth = this.$refs[\"expressor\"].clientWidth;\n    this.canvasHeight = this.$refs[\"expressor\"].clientHeight;\n\n    new ResizeSensor(this.$refs[\"expressor\"], () => {\n      this.canvasWidth = this.$refs[\"expressor\"].clientWidth;\n      this.canvasHeight = this.$refs[\"expressor\"].clientHeight;\n    });\n\n    this.root.organismLayout.onCalculated.subscribe((output) => {\n      this.lines = output.lines;\n      this.box.width = output.totalWidth;\n      this.box.height = output.totalHeight;\n      this.drawLines();\n    });\n  }\n}\n</script>\n\n<style scoped>\n.expressor {\n  position: relative;\n  outline: none;\n}\n.organism {\n  margin-bottom: 20px;\n}\n.attribute {\n}\n.controls {\n  display: grid;\n  grid-template-columns: max-content max-content max-content;\n  gap: 10px;\n}\n.bottom-group {\n  display: flex;\n  justify-content: space-between;\n}\n.error-box {\n  padding: 5px;\n  font-size: 12px;\n  background-color: hsl(0, 100%, 67%);\n  visibility: hidden;\n  color: white;\n}\n.error-box.error {\n  visibility: visible;\n}\n.canvas {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0px;\n  left: 0px;\n  border: none;\n}\n.clearStorage {\n  position: fixed;\n  top: 10px;\n  left: 200px;\n  z-index: 2;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}